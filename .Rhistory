)
test1 <- CVMNW_K2B_R(X = X, Y = Y, h = 1.5)
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y, h = 1.5)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y, h = 1.5),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y, h = 1.5)
)
)
test1 <- CVMNW_K2B_w_R(X = X, Y = Y.CP, h = 1.5, w = w)
test2 <- CVMNW_K2B_w_rcpp(X = X, Y = Y.CP, h = 1.5, w = w)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_w_R(X = X, Y = Y.CP, h = 1.5, w = w),
Rcpp = CVMNW_K2B_w_rcpp(X = X, Y = Y.CP, h = 1.5, w = w)
)
)
test1 <- LOOCV(X = X, Y = Y, kernel = "Gaussian")
test2 <- LOOCV_o1(X = X, Y = Y, kernel = "Gaussian")
sum(abs(test1$bandwidth - test2$bandwidth))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = LOOCV_o1(X = X, Y = Y),
Rcpp = LOOCV(X = X, Y = Y)
)
)
test1 <- CVMNWdist_K4B_R(X = X, Y_CP = Y.CP, h = 1.5)
test2 <- CVMNWdist_K4B_rcpp(X = X, Y_CP = Y.CP, h = 1.5)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNWdist_K4B_R(X = X, Y_CP = Y.CP, h = 1.5),
Rcpp = CVMNWdist_K4B_rcpp(X = X, Y_CP = Y.CP, h = 1.5)
)
)
test1 <- CVMNWdist_K4B_w_R(X = X, Y_CP = Y.CP, h = 1.5, w = w)
test2 <- CVMNWdist_K4B_w_rcpp(X = X, Y_CP = Y.CP, h = 1.5, w = w)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNWdist_K4B_R(X = X, Y_CP = Y.CP, h = 1.5),
Rcpp = CVMNWdist_K4B_rcpp(X = X, Y_CP = Y.CP, h = 1.5)
)
)
z <- c(TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE)
rle(z)
y <- rnorm(10, 0, 1)
yo <- order(y)
ys <- y[yo]
uy <- rle(ys)[[1]]
uy
cols <- cumsum(uy)
cols
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
)
)
test1 <- CVMNW_K2B_R(X = X, Y = Y, h = 1.5, p_Y = 1)
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y, h = 1.5, p_Y = 1)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y, h = 1.5, p_Y = 1),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y, h = 1.5, p_Y = 1)
)
)
test1 <- CVMNW_K2B_w_R(X = X, Y = Y.CP, h = 1.5, w = w, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_w_rcpp(X = X, Y = Y.CP, h = 1.5, w = w, p_Y = rep(1 / n, n))
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_w_R(X = X, Y = Y.CP, h = 1.5, w = w, p_Y = rep(1 / n, n)),
Rcpp = CVMNW_K2B_w_rcpp(X = X, Y = Y.CP, h = 1.5, w = w, p_Y = rep(1 / n, n))
)
)
test1 <- CVMNWdist_K4B_R(X = X, Y_CP = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNWdist_K4B_rcpp(X = X, Y_CP = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNWdist_K4B_R(X = X, Y_CP = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp = CVMNWdist_K4B_rcpp(X = X, Y_CP = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
)
)
test1 <- CVMNWdist_K4B_w_R(X = X, Y_CP = Y.CP, h = 1.5, w = w, p_Y = rep(1 / n, n))
test2 <- CVMNWdist_K4B_w_rcpp(X = X, Y_CP = Y.CP, h = 1.5, w = w, p_Y = rep(1 / n, n))
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNWdist_K4B_R(X = X, Y_CP = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp = CVMNWdist_K4B_rcpp(X = X, Y_CP = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
)
)
library(MYHRcpp)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
)
)
test1 <- CVMNW_K2B_R(X = X, Y = Y, h = 1.5, p_Y = 1)
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y, h = 1.5, p_Y = 1)
test3 <- CVMNW_K2B_rcpp_n1(X = X, Y = Y, h = 1.5, p_Y = 1)
sum(abs(test1 - test2))
sum(abs(test1 - test3))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y, h = 1.5, p_Y = 1),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y, h = 1.5, p_Y = 1),
Rcpp_n1 = CVMNW_K2B_rcpp_n1(X = X, Y = Y, h = 1.5, p_Y = 1)
)
)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
sum(abs(test1 - test2))
sum(abs(test1 - test3))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp_uniY = CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
)
)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
test4 <- CVDNWuniY_K2B_rcpp_n1(X = X[order(Y), ], Y = Y[order(Y)], h = 1.5,
rank_y_in_Y = rankAinB_rcpp(Y, Y), p_y = rep(1 / n, n))
dim(X)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
test4 <- CVDNWuniY_K2B_rcpp_n1(X = as.matrix(X[order(Y), ]), Y = Y[order(Y)], h = 1.5,
rank_y_in_Y = rankAinB_rcpp(Y, Y), p_y = rep(1 / n, n))
rankAinB_rcpp(Y, Y)
test4 <- CVDNWuniY_K2B_rcpp_n1(X = as.matrix(X[order(Y), ]), Y = Y[order(Y)], h = 1.5,
rank_y_in_Y = rankAinB_rcpp(sort(Y), Y), p_y = rep(1 / n, n))
test4 <- CVDNWuniY_K2B_rcpp_n1(X = as.matrix(X[order(Y), ]), Y = Y[order(Y)], h = 1.5,
rank_y_in_Y = rankAinB_rcpp(sort(Y), sort(Y)), p_y = rep(1 / n, n))
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
X.sort <- as.matrix(X[order(Y), ])
Y.sort <- Y[order(Y)]
rank.y.in.Y <- rankAinB_rcpp(Y.sort, Y.sort)
rank.y.in.Y
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
X.sort <- as.matrix(X[order(Y), ])
Y.sort <- Y[order(Y)]
rank.y.in.Y <- rankAinB_rcpp(Y.sort, Y.sort)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
test4 <- CVDNWuniY_K2B_rcpp_n1(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n))
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
order(Y)
Y.sort
sort(order(Y))
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
X.sort <- as.matrix(X[order(Y), ])
Y.sort <- Y[order(Y)]
rank.y.in.Y <- rankAinB_rcpp(Y.sort, Y.sort)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
test4 <- CVDNWuniY_K2B_rcpp_n1(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n))
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
X.sort <- as.matrix(X[order(Y), ])
Y.sort <- Y[order(Y)]
rank.y.in.Y <- rankAinB_rcpp(Y.sort, Y.sort)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
test4 <- CVDNWuniY_K2B_rcpp_n1(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n))
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp_uniY = CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n)),
Rcpp_uniY_n1 = CVDNWuniY_K2B_rcpp_n1(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n))
)
)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
X.sort <- as.matrix(X[order(Y), ])
Y.sort <- Y[order(Y)]
rank.y.in.Y <- rankAinB_rcpp(Y.sort, Y.sort)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
X.sort <- as.matrix(X[order(Y), ])
Y.sort <- Y[order(Y)]
rank.y.in.Y <- rankAinB_rcpp(Y.sort, Y.sort)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
test4 <- CVDNWuniY_K2B_rcpp_n1(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n))
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
X.sort <- as.matrix(X[order(Y), ])
Y.sort <- Y[order(Y)]
rank.y.in.Y <- rankAinB_rcpp(Y.sort, Y.sort)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
test4 <- CVDNWuniY_K2B_rcpp(X = X.sort, Y = Y.sort, h = 1.5, y = Y, p_y = rep(1 / n, n))
test5 <- CVDNWuniY_K2B_rcpp_n1(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n))
test3$cv
test4$cv
test5$cv
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
X.sort <- as.matrix(X[order(Y), ])
Y.sort <- Y[order(Y)]
rank.y.in.Y <- rankAinB_rcpp(Y.sort, Y.sort)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
test4 <- CVDNWuniY_K2B_rcpp(X = X.sort, Y = Y.sort, h = 1.5, y = Y.sort, p_y = rep(1 / n, n))
test5 <- CVDNWuniY_K2B_rcpp_n1(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n))
test3$cv
test4$cv
test5$cv
test4$Dhat
cbind(test4$Dhat, test5$Dhat)
sum(abs(test4$Dhat - test5$Dhat))
sum(abs(test4$Nhat - test5$Nhat))
dim(abs(test4$Nhat - test5$Nhat))
rank.y.in.Y
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
X.sort <- as.matrix(X[order(Y), ])
Y.sort <- Y[order(Y)]
rank.y.in.Y <- rankAinB_rcpp(Y.sort, Y.sort)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
test4 <- CVDNWuniY_K2B_rcpp(X = X.sort, Y = Y.sort, h = 1.5, y = Y.sort, p_y = rep(1 / n, n))
test5 <- CVDNWuniY_K2B_rcpp_n1(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n))
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
sum(abs(test1 - test5))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp_uniY = CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n)),
Rcpp_uniY_n1 = CVDNWuniY_K2B_rcpp_n1(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n))
)
)
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp_uniY = CVDNWuniY_K2B_rcpp(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n)),
Rcpp_uniY_n1 = CVDNWuniY_K2B_rcpp_n1(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n))
)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
X.sort <- as.matrix(X[order(Y), ])
Y.sort <- Y[order(Y)]
rank.y.in.Y <- rankAinB_rcpp(Y.sort, Y.sort)
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n))
test3 <- CVDNWuniY_K2B_rcpp(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n))
test4 <- CVDNWuniY_K2B_rcpp_n1(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
test5 <- CVDNWuniY_K2B_rcpp_n1(X = X.sort, Y = Y.sort, h = 1.5, y = Y.sort, p_y = rep(1 / n, n))
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
sum(abs(test1 - test5))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5, p_Y = rep(1 / n, n)),
Rcpp_uniY = CVDNWuniY_K2B_rcpp(X = X.sort, Y = Y.sort, h = 1.5,
rank_y_in_Y = rank.y.in.Y, p_y = rep(1 / n, n)),
Rcpp_uniY_n1 = CVDNWuniY_K2B_rcpp_n1(X = X, Y = Y, h = 1.5, y = Y, p_y = rep(1 / n, n))
)
)
library(MYHRcpp)
rep(c(1, 2), 10)
rep(c(1, 2), 11)
?c
?nlminb
quantile(1:10, probs = c(0, 1))
quantile(1:10, probs = c(0, 0.1, 1))
a <- matrix(1:5, 5, 1)
a
a[c(1, 4, 2)]
order(a)
sort(unique(a))
library(MYHRcpp)
?nmk
n <- 1000
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
LOOCV(X = X, Y = Y)
LOOCV(X = X, Y = Y, regression = "mean")
LOOCV(X = X, Y = Y, regression = "mean", kernel = "K4_Biweight")
n <- 500
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
### selecting bandwidth using leave-one-out cross-validation
LOOCV(X = X, Y = Y)
LOOCV(X = X, Y = Y, regression = "mean")
LOOCV(X = X, Y = Y, regression = "mean", kernel = "K4_Biweight")
LOOCV(X = X, Y = Y, regression = "mean", kernel = "Gaussian")
LOOCV(X = X, Y = Y, regression = "distribution")
library(MYHRcpp)
n <- 500
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
### selecting bandwidth using leave-one-out cross-validation
LOOCV(X = X, Y = Y)
LOOCV(X = X, Y = Y, regression = "mean")
LOOCV(X = X, Y = Y, regression = "mean", kernel = "K4_Biweight")
LOOCV(X = X, Y = Y, regression = "mean", kernel = "Gaussian")
LOOCV(X = X, Y = Y, regression = "distribution")
LOOCV(X = X, Y = Y, regression = "mean", method = "nlminb")
LOOCV(X = X, Y = Y, regression = "mean", method = "nmk")
library(dfoptim)
LOOCV(X = X, Y = Y, regression = "mean", method = "nmk")
library(MYHRcpp)
n <- 500
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
### selecting bandwidth using leave-one-out cross-validation
LOOCV(X = X, Y = Y)
LOOCV(X = X, Y = Y, regression = "mean")
LOOCV(X = X, Y = Y, regression = "mean", kernel = "K4_Biweight")
LOOCV(X = X, Y = Y, regression = "mean", kernel = "Gaussian")
LOOCV(X = X, Y = Y, regression = "mean", method = "nlminb")
LOOCV(X = X, Y = Y, regression = "distribution")
LOOCV(X = X, Y = Y, regression = "distribution", kernel = "K4_Biweight")
LOOCV(X = X, Y = Y, regression = "distribution", kernel = "Gaussian")
LOOCV(X = X, Y = Y, regression = "distribution", method = "nlminb")
LOOCV(X = X, Y = Y, regression = "distribution", dist.mode = "sample")
LOOCV(X = X, Y = Y, regression = "distribution", dist.mode = "quantile")
LOOCV(X = X, Y = Y, regression = "distribution", dist.mode = "sample",
dist.sample.control = list(SN = 10, seed = 123))
LOOCV(X = X, Y = Y, regression = "distribution", dist.mode = "quantile",
dist.quantile.control = list(QN = 10))
library(MYHRcpp)
library(MYHRcpp)
yhat0 <- NW(X = X, Y = Y)
dim(X)
dim(Y)
yhat0 <- NW(X = X, Y = Y)
yhat1 <- NW(X = X, Y = Y, x = x)
yhat2 <- NW(X = X, Y = Y, x = x, regression = "mean")
yhat3 <- NW(X = X, Y = Y, x = x, regression = "mean",
kernel = "K4_Biweight")
yhat4 <- NW(X = X, Y = Y, x = x, regression = "mean",
kernel = "K4_Biweight", bandwidth = 0.5)
yhat5 <- NW(X = X, Y = Y, x = x, regression = "distribution")
yhat6 <- NW(X = X, Y = Y, x = x, regression = "distribution",
y = sort(unique(Y)))
plot(X, Y, cex = 0.5)
lines(x, yhat)
plot(X, Y, cex = 0.5)
lines(x, yhat0)
yhat0
plot(X, Y, cex = 0.5)
lines(x, NW(X = X, Y = Y, x = x))
lines(x, NW(X = X, Y = Y, x = x, bandwidth = 0.1), col = 2)
lines(x, NW(X = X, Y = Y, x = x, bandwidth = 1), col = 3)
lines(x, NW(X = X, Y = Y, x = x, bandwidth = 2), col = 4)
RW <- colSums(outer(sample(1:n, size = n, replace = TRUE), 1:n, FUN = "=="))
hhat.boot <- LOOCV(X = X, Y = Y, wi.boot = RW)
n <- 100
p <- 5
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
LOOCV(X = X, Y = Y)
yhat <- NW(X = X, Y = Y, x = X)
plot(Y, yhat, cex = 0.5)
lines(c(-3, 3), c(-3, 3))
library(MYHRcpp)
library(MYHRcpp)
