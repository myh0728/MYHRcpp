w = w.order)
mean((dLhat1 - dLhat2) ^ 2)
mean((dLhat1 - dLhat1a) ^ 2)
mean((dLhat2 - dLhat2a) ^ 2)
microbenchmark::microbenchmark(
Rcpp = KME_w_rcpp(t_stop = test.data1$t.stop,
is_event = test.data1$is.event,
t_event = sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
w = w),
Rcpp_n1 = KME_w_rcpp_n1(t_stop = sort(test.data1$t.stop),
is_event = test.data1$is.event[order(test.data1$t.stop)],
t_event = sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
w = w[order(test.data1$t.stop)]),
Rcpp_n1_a = KME_w_rcpp_n1(t_stop = t.stop,
is_event = is.event,
t_event = t.event,
w = w.order),
Rcpp_a = KME_w_rcpp(t_stop = t.stop,
is_event = is.event,
t_event = t.event,
w = w.order)
)
Shat <- SKME.outer(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = Xi, K = K2_Biweight, h = 1)
dLhat1 <- SKME_K2B_rcpp(t_stop = test.data1$t.stop,
is_event = test.data1$is.event,
t_event = sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
X = Xi, x = Xi, h = rep(1, length = p))
mean(abs(Shat$hazard - dLhat1))
microbenchmark::microbenchmark(
outer = SKME.outer(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = Xi, K = K2_Biweight, h = 1),
Rcpp = SKME_K2B_rcpp(t_stop = test.data1$t.stop,
is_event = test.data1$is.event,
t_event = sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
X = Xi, x = Xi, h = rep(1, length = p))
)
n <- 100
p <- 5
Xi <- matrix(rnorm(n * p), n, p)
Ci <- 1 + rexp(n)
test.data1 <- simSurv.AFT.normal(Xi = Xi, Ci = Ci,
alpha0 = 1, beta0 = rep(1, 5),
sigma.error = 1)
test.data2 <- simSurv.PH(Xi = Xi, Ci = Ci,
beta0 = rep(1, 5))
Shat <- KME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event)
plot(Shat$jumps, Shat$survival, type = 's',
xlab = "time", ylab = "survival",
ylim = c(0, 1))
Shat.empirical <- colMeans(outer(test.data1$failure.time,
sort(unique(test.data1$failure.time)),
FUN = ">"))
lines(sort(unique(test.data1$failure.time)),
Shat.empirical, type = 's', lty = 2)
Shat.empirical.biased1 <- colMeans(
outer(
test.data1$t.stop[test.data1$is.event == 1],
sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
Shat.empirical.biased1,
type = 's', lty = 3, col = 2)
Shat.empirical.biased2 <- colMeans(
outer(
test.data1$t.stop,
sort(unique(test.data1$t.stop)),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop)),
Shat.empirical.biased2,
type = 's', lty = 3, col = 3)
x <- matrix(rep(0, p), 1, p)
t.grids <- seq(0, max(test.data1$t.stop), 0.1)
t.grids
n <- 100
p <- 5
alpha0 <- 1
beta0 <- rep(1, p)
sigma0 <- 1
Xi <- matrix(rnorm(n * p), n, p)
Ci <- 1 + rexp(n)
test.data1 <- simSurv.AFT.normal(Xi = Xi, Ci = Ci,
alpha0 = alpha0, beta0 = beta0,
sigma.error = sigma0)
test.data2 <- simSurv.PH(Xi = Xi, Ci = Ci,
beta0 = beta0)
n <- 100
p <- 5
alpha0 <- 1
beta0 <- rep(1, p)
sigma0 <- 1
Xi <- matrix(rnorm(n * p), n, p)
Ci <- 1 + rexp(n)
test.data1 <- simSurv.AFT.normal(Xi = Xi, Ci = Ci,
alpha0 = alpha0, beta0 = beta0,
sigma.error = sigma0)
test.data2 <- simSurv.PH(Xi = Xi, Ci = Ci,
beta0 = rep(1, p))
n <- 100
p <- 5
alpha0 <- 1
beta0 <- rep(1, p)
sigma0 <- 1
Xi <- matrix(rnorm(n * p), n, p)
Ci <- 1 + rexp(n)
test.data1 <- simSurv.AFT.normal(Xi = Xi, Ci = Ci,
alpha0 = alpha0, beta0 = beta0,
sigma.error = sigma0)
Xi <- as.matrix(Xi)
Ci <- as.vector(as.matrix(Ci))
number_n <- dim(Xi)[1]
number_p <- dim(Xi)[2]
Ti <- exp(alpha0 + Xi %*% beta0 +
rnorm(n = number_n, mean = 0, sd = sigma.error))
sigma0 <- 1
n <- 100
p <- 5
alpha0 <- 1
beta0 <- rep(1, p)
sigma0 <- 1
sigma0
length(sigma0)
sigma0
library(MYHRcpp)
n <- 100
p <- 5
alpha0 <- 1
beta0 <- rep(1, p)
sigma0 <- 1
sigma0
Xi <- matrix(rnorm(n * p), n, p)
Ci <- 1 + rexp(n)
test.data1 <- simSurv.AFT.normal(Xi = Xi, Ci = Ci,
alpha0 = alpha0, beta0 = beta0,
sigma.error = sigma0)
test.data2 <- simSurv.PH(Xi = Xi, Ci = Ci,
beta0 = beta0)
Shat <- KME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event)
plot(Shat$jumps, Shat$survival, type = 's',
xlab = "time", ylab = "survival",
ylim = c(0, 1))
Shat.empirical <- colMeans(outer(test.data1$failure.time,
sort(unique(test.data1$failure.time)),
FUN = ">"))
lines(sort(unique(test.data1$failure.time)),
Shat.empirical, type = 's', lty = 2)
Shat.empirical.biased1 <- colMeans(
outer(
test.data1$t.stop[test.data1$is.event == 1],
sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
Shat.empirical.biased1,
type = 's', lty = 3, col = 2)
Shat.empirical.biased2 <- colMeans(
outer(
test.data1$t.stop,
sort(unique(test.data1$t.stop)),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop)),
Shat.empirical.biased2,
type = 's', lty = 3, col = 3)
x <- matrix(rep(0, p), 1, p)
t.grids <- seq(0, max(test.data1$t.stop), 0.1)
S0.cond <- 1 - pnorm(log(t.grids) - alpha0 - sum(x * beta0), mean = 0, sd = sigma0)
plot(t.grids, S0.cond, type = 'l')
plot(t.grids, S0.cond, type = 'l', xlab = "time", ylab = "survival")
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x, t.points = t.grids)
Shat.cond$survival
lines(t.grids, Shat.cond$survival, col = 2)
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 0.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 1.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 2.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 3.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
n <- 100
p <- 2
alpha0 <- 1
beta0 <- rep(1, p)
sigma0 <- 1
Xi <- matrix(rnorm(n * p), n, p)
Ci <- 1 + rexp(n)
test.data1 <- simSurv.AFT.normal(Xi = Xi, Ci = Ci,
alpha0 = alpha0, beta0 = beta0,
sigma.error = sigma0)
test.data2 <- simSurv.PH(Xi = Xi, Ci = Ci,
beta0 = beta0)
Shat <- KME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event)
plot(Shat$jumps, Shat$survival, type = 's',
xlab = "time", ylab = "survival",
ylim = c(0, 1))
Shat.empirical <- colMeans(outer(test.data1$failure.time,
sort(unique(test.data1$failure.time)),
FUN = ">"))
lines(sort(unique(test.data1$failure.time)),
Shat.empirical, type = 's', lty = 2)
Shat.empirical.biased1 <- colMeans(
outer(
test.data1$t.stop[test.data1$is.event == 1],
sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
Shat.empirical.biased1,
type = 's', lty = 3, col = 2)
Shat.empirical.biased2 <- colMeans(
outer(
test.data1$t.stop,
sort(unique(test.data1$t.stop)),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop)),
Shat.empirical.biased2,
type = 's', lty = 3, col = 3)
x <- matrix(rep(0, p), 1, p)
t.grids <- seq(0, max(test.data1$t.stop), 0.1)
S0.cond <- 1 - pnorm(log(t.grids) - alpha0 - sum(x * beta0), mean = 0, sd = sigma0)
plot(t.grids, S0.cond, type = 'l', xlab = "time", ylab = "survival")
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 3.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 2.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 1.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 0.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 0.6, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
n <- 500
p <- 2
alpha0 <- 1
beta0 <- rep(1, p)
sigma0 <- 1
Xi <- matrix(rnorm(n * p), n, p)
Ci <- 1 + rexp(n)
test.data1 <- simSurv.AFT.normal(Xi = Xi, Ci = Ci,
alpha0 = alpha0, beta0 = beta0,
sigma.error = sigma0)
test.data2 <- simSurv.PH(Xi = Xi, Ci = Ci,
beta0 = beta0)
#####
Shat <- KME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event)
plot(Shat$jumps, Shat$survival, type = 's',
xlab = "time", ylab = "survival",
ylim = c(0, 1))
Shat.empirical <- colMeans(outer(test.data1$failure.time,
sort(unique(test.data1$failure.time)),
FUN = ">"))
lines(sort(unique(test.data1$failure.time)),
Shat.empirical, type = 's', lty = 2)
Shat.empirical.biased1 <- colMeans(
outer(
test.data1$t.stop[test.data1$is.event == 1],
sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
Shat.empirical.biased1,
type = 's', lty = 3, col = 2)
Shat.empirical.biased2 <- colMeans(
outer(
test.data1$t.stop,
sort(unique(test.data1$t.stop)),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop)),
Shat.empirical.biased2,
type = 's', lty = 3, col = 3)
###
x <- matrix(rep(0, p), 1, p)
t.grids <- seq(0, max(test.data1$t.stop), 0.1)
S0.cond <- 1 - pnorm(log(t.grids) - alpha0 - sum(x * beta0), mean = 0, sd = sigma0)
plot(t.grids, S0.cond, type = 'l', xlab = "time", ylab = "survival")
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 0.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
n <- 1000
p <- 2
alpha0 <- 1
beta0 <- rep(1, p)
sigma0 <- 1
Xi <- matrix(rnorm(n * p), n, p)
Ci <- 1 + rexp(n)
test.data1 <- simSurv.AFT.normal(Xi = Xi, Ci = Ci,
alpha0 = alpha0, beta0 = beta0,
sigma.error = sigma0)
test.data2 <- simSurv.PH(Xi = Xi, Ci = Ci,
beta0 = beta0)
#####
Shat <- KME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event)
plot(Shat$jumps, Shat$survival, type = 's',
xlab = "time", ylab = "survival",
ylim = c(0, 1))
Shat.empirical <- colMeans(outer(test.data1$failure.time,
sort(unique(test.data1$failure.time)),
FUN = ">"))
lines(sort(unique(test.data1$failure.time)),
Shat.empirical, type = 's', lty = 2)
Shat.empirical.biased1 <- colMeans(
outer(
test.data1$t.stop[test.data1$is.event == 1],
sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
Shat.empirical.biased1,
type = 's', lty = 3, col = 2)
Shat.empirical.biased2 <- colMeans(
outer(
test.data1$t.stop,
sort(unique(test.data1$t.stop)),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop)),
Shat.empirical.biased2,
type = 's', lty = 3, col = 3)
###
x <- matrix(rep(0, p), 1, p)
t.grids <- seq(0, max(test.data1$t.stop), 0.1)
S0.cond <- 1 - pnorm(log(t.grids) - alpha0 - sum(x * beta0), mean = 0, sd = sigma0)
plot(t.grids, S0.cond, type = 'l', xlab = "time", ylab = "survival")
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 0.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi)
t.points <- seq(0, 3, 0.01)
S.empirical <- colMeans(outer(test.data1$failure.time, t.points, FUN = ">"))
plot(t.points, S.empirical, type = 's')
n <- 1000
p <- 2
alpha0 <- 1
beta0 <- rep(1, p)
sigma0 <- 1
Xi <- matrix(rnorm(n * p), n, p)
Ci <- 1 + rexp(n)
test.data1 <- simSurv.AFT.normal(Xi = Xi, Ci = Ci,
alpha0 = alpha0, beta0 = beta0,
sigma.error = sigma0)
x <- matrix(rep(0, p), 1, p)
t.grids <- seq(0, max(test.data1$t.stop), 0.1)
S0.cond <- 1 - pnorm(log(t.grids) - alpha0 - sum(x * beta0), mean = 0, sd = sigma0)
plot(t.grids, S0.cond, type = 'l', xlab = "time", ylab = "survival")
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 0.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, col = 2)
n <- 1000
p <- 2
alpha0 <- 1
beta0 <- rep(1, p)
sigma0 <- 1
Xi <- matrix(rnorm(n * p), n, p)
Ci <- 1 + rexp(n)
test.data1 <- simSurv.AFT.normal(Xi = Xi, Ci = Ci,
alpha0 = alpha0, beta0 = beta0,
sigma.error = sigma0)
test.data2 <- simSurv.PH(Xi = Xi, Ci = Ci,
beta0 = beta0)
#####
Shat <- KME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event)
plot(Shat$jumps, Shat$survival, type = 's',
xlab = "time", ylab = "survival",
ylim = c(0, 1))
Shat.empirical <- colMeans(outer(test.data1$failure.time,
sort(unique(test.data1$failure.time)),
FUN = ">"))
lines(sort(unique(test.data1$failure.time)),
Shat.empirical, type = 's', lty = 2)
Shat.empirical.biased1 <- colMeans(
outer(
test.data1$t.stop[test.data1$is.event == 1],
sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
Shat.empirical.biased1,
type = 's', lty = 3, col = 2)
Shat.empirical.biased2 <- colMeans(
outer(
test.data1$t.stop,
sort(unique(test.data1$t.stop)),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop)),
Shat.empirical.biased2,
type = 's', lty = 3, col = 3)
###
x <- matrix(rep(0, p), 1, p)
t.grids <- seq(0, max(test.data1$t.stop), 0.1)
S0.cond <- 1 - pnorm(log(t.grids) - alpha0 - sum(x * beta0), mean = 0, sd = sigma0)
plot(t.grids, S0.cond, type = 'l', xlab = "time", ylab = "survival")
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 0.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, lty = 's', col = 2)
n <- 1000
p <- 2
alpha0 <- 1
beta0 <- rep(1, p)
sigma0 <- 1
Xi <- matrix(rnorm(n * p), n, p)
Ci <- 1 + rexp(n)
test.data1 <- simSurv.AFT.normal(Xi = Xi, Ci = Ci,
alpha0 = alpha0, beta0 = beta0,
sigma.error = sigma0)
test.data2 <- simSurv.PH(Xi = Xi, Ci = Ci,
beta0 = beta0)
#####
Shat <- KME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event)
plot(Shat$jumps, Shat$survival, type = 's',
xlab = "time", ylab = "survival",
ylim = c(0, 1))
Shat.empirical <- colMeans(outer(test.data1$failure.time,
sort(unique(test.data1$failure.time)),
FUN = ">"))
lines(sort(unique(test.data1$failure.time)),
Shat.empirical, type = 's', lty = 2)
Shat.empirical.biased1 <- colMeans(
outer(
test.data1$t.stop[test.data1$is.event == 1],
sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop[test.data1$is.event == 1])),
Shat.empirical.biased1,
type = 's', lty = 3, col = 2)
Shat.empirical.biased2 <- colMeans(
outer(
test.data1$t.stop,
sort(unique(test.data1$t.stop)),
FUN = ">"
)
)
lines(sort(unique(test.data1$t.stop)),
Shat.empirical.biased2,
type = 's', lty = 3, col = 3)
###
x <- matrix(rep(0, p), 1, p)
t.grids <- seq(0, max(test.data1$t.stop), 0.1)
S0.cond <- 1 - pnorm(log(t.grids) - alpha0 - sum(x * beta0), mean = 0, sd = sigma0)
plot(t.grids, S0.cond, type = 'l', xlab = "time", ylab = "survival")
Shat.cond <- SKME(t.stop = test.data1$t.stop,
is.event = test.data1$is.event,
X = Xi, x = x,
bandwidth = 0.5, t.points = t.grids)
lines(t.grids, Shat.cond$survival, type = 's', col = 2)
