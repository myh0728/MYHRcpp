X = X,
phi = control.EXsubgroupY$phi,
alpha = theta.initial["alpha"],
beta = theta.initial[paste("beta", 1:number_p, sep = "")])
number_all <- 5 * number_p + 1
JV <- matrix(0, nrow = number_all, ncol = number_all)
JV[1:(number_p + 1), 1:(number_p + 1)] <- -invH
JV[(number_all - number_p * 2 + 1):number_all,
1:(number_all - number_p * 2)] <- aux_Psi$score_gradient
}
}
JV
##### Logistic regression model #####
p <- 2
theta0 <- 1
theta1 <- 1
theta2 <- 1
beta0 <- 0.2
n <- 1000
N <- 1000
N_sim <- 10000
X1 <- rnorm(n = n, mean = 0, sd = 1)
X2 <- rbinom(n = n, size = 1, prob = 0.6)
X <- cbind(X1, X2)
SI <- theta0 + X1 * theta1 + X2 * theta2
Y <- rbinom(n = n, size = 1, prob = exp(SI) / (1 + exp(SI)))
test.data <- data.frame(response = Y,
covariate = X)
X1_sim <- rnorm(n = N_sim, mean = 0, sd = 1)
X2_sim <- rbinom(n = N_sim, size = 1, prob = 0.6)
X_sim <- cbind(X1_sim, X2_sim)
SI_sim <- theta0 + X1_sim * theta1 + X2_sim * theta2
Y_sim <- rbinom(n = N_sim, size = 1, prob = exp(SI_sim) / (1 + exp(SI_sim)))
Y_shift <- sample(x = Y_sim, size = N, replace = TRUE, prob = exp(beta0 * Y_sim))
X_shift <- matrix(0, nrow = N, ncol = 2)
for (i in 1:N)
{
w_i <- ((Y_shift[i] == 1) * exp(theta0 + X1_sim * theta1 + X2_sim * theta2) +
(Y_shift[i] == 0)) / (1 + exp(theta0 + X1_sim * theta1 + X2_sim * theta2))
X_shift[i, ] <- X_sim[sample(1:N_sim, size = 1, prob = w_i), ]
}
X1_shift <- X_shift[, 1]
X2_shift <- X_shift[, 2]
### average of X given Y (auxiliary information)
phi <- matrix(0, 2, p)
phi[1, ] <- colMeans(X_shift[Y_shift == 1, ])
phi[2, ] <- colMeans(X_shift[Y_shift == 0, ])
#
aux_EXsubgroupY_logistic_rcpp(X = X,
alpha = theta0,
beta = c(theta1, theta2),
phi = phi)
#
data <- data.frame(X = X, Y = Y)
X.name <- c("X.X1", "X.X2")
Y.name <- "Y"
aux <- "EXsubgroupY"
control.EXsubgroupY <- list(phi = phi,
sample.size = N)
if (!is.null(data))
{
X <- as.matrix(data[, X.name])
Y <- as.matrix(data[, Y.name])
}else
{
X <- as.matrix(X)
Y <- as.matrix(Y)
}
number_n <- dim(X)[1]
number_p <- dim(X)[2]
theta.initial <- MLE.logistic(X = X, Y = Y)$parameter
MLE.score <- diff_lL_logistic_rcpp(
X = X, Y = Y,
alpha = theta.initial["alpha"],
beta = theta.initial[paste("beta", 1:number_p, sep = "")])
invH <- solve(MLE.score$hessian)
aux_Psi <- aux_EXsubgroupY_logistic_rcpp(
X = X,
phi = control.EXsubgroupY$phi,
alpha = theta.initial["alpha"],
beta = theta.initial[paste("beta", 1:number_p, sep = "")])
number_all <- 5 * number_p + 1
JV <- matrix(0, nrow = number_all, ncol = number_all)
JV[1:(number_p + 1), 1:(number_p + 1)] <- -invH
JV[(number_all - number_p * 2 + 1):number_all,
1:(number_all - number_p * 2)] <- aux_Psi$score_gradient
JV
JV[1:(number_all - number_p * 2),
(number_all - number_p * 2 + 1):number_all] <- t(
JV[(number_all - number_p * 2 + 1):number_all,
1:(number_all - number_p * 2)])
JV[(number_all - number_p * 2 + 1):number_all,
(number_all - number_p * 2 + 1):number_all] <- -aux_Psi$score_square
JV
JV[(number_p + 2):(number_p * 3 + 1),
(number_p + 2):(number_p * 3 + 1)] <- diag(number_p * 2) *
control.EXsubgroupY$sample.size / number_n
JV
thetahat <- as.vector(theta.initial + invH %*%
t(matrix(aux_Psi$score_gradient[, 1:(number_p + 1)],
nrow = number_p * 2,
ncol = number_p + 1)) %*%
pinv_rcpp(JV)[(number_all - number_p * 2 + 1):number_all,
(number_all - number_p * 2 + 1):number_all] %*%
(-aux_Psi$score))
theta.initial
thetahat
library(MYHRcpp)
p <- 2
theta0 <- 1
theta1 <- 1
theta2 <- 1
beta0 <- 0.2
n <- 1000
N <- 1000
N_sim <- 10000
X1 <- rnorm(n = n, mean = 0, sd = 1)
X2 <- rbinom(n = n, size = 1, prob = 0.6)
X <- cbind(X1, X2)
SI <- theta0 + X1 * theta1 + X2 * theta2
Y <- rbinom(n = n, size = 1, prob = exp(SI) / (1 + exp(SI)))
test.data <- data.frame(response = Y,
covariate = X)
X1_sim <- rnorm(n = N_sim, mean = 0, sd = 1)
X2_sim <- rbinom(n = N_sim, size = 1, prob = 0.6)
X_sim <- cbind(X1_sim, X2_sim)
SI_sim <- theta0 + X1_sim * theta1 + X2_sim * theta2
Y_sim <- rbinom(n = N_sim, size = 1, prob = exp(SI_sim) / (1 + exp(SI_sim)))
Y_shift <- sample(x = Y_sim, size = N, replace = TRUE, prob = exp(beta0 * Y_sim))
X_shift <- matrix(0, nrow = N, ncol = 2)
for (i in 1:N)
{
w_i <- ((Y_shift[i] == 1) * exp(theta0 + X1_sim * theta1 + X2_sim * theta2) +
(Y_shift[i] == 0)) / (1 + exp(theta0 + X1_sim * theta1 + X2_sim * theta2))
X_shift[i, ] <- X_sim[sample(1:N_sim, size = 1, prob = w_i), ]
}
X1_shift <- X_shift[, 1]
X2_shift <- X_shift[, 2]
### average of X given Y (auxiliary information)
phi <- matrix(0, 2, p)
phi[1, ] <- colMeans(X_shift[Y_shift == 1, ])
phi[2, ] <- colMeans(X_shift[Y_shift == 0, ])
auxLS.logistic(data = data.frame(X = X, Y = Y),
X.name = c("X.X1", "X.X2"), Y.name = "Y",
aux = "EXsubgroupY",
control.EXsubgroupY = list(phi = phi,
sample.size = N))
phi
colMeans(X[Y == 1, ])
colMeans(X[Y == 0, ])
##### Logistic regression model #####
p <- 2
theta0 <- 1
theta1 <- 1
theta2 <- 1
beta0 <- 0.2
n <- 1000
N <- 1000
N_sim <- 10000
X1 <- rnorm(n = n, mean = 0, sd = 1)
X2 <- rbinom(n = n, size = 1, prob = 0.6)
X <- cbind(X1, X2)
SI <- theta0 + X1 * theta1 + X2 * theta2
Y <- rbinom(n = n, size = 1, prob = exp(SI) / (1 + exp(SI)))
test.data <- data.frame(response = Y,
covariate = X)
X1_sim <- rnorm(n = N_sim, mean = 0, sd = 1)
X2_sim <- rbinom(n = N_sim, size = 1, prob = 0.6)
X_sim <- cbind(X1_sim, X2_sim)
SI_sim <- theta0 + X1_sim * theta1 + X2_sim * theta2
Y_sim <- rbinom(n = N_sim, size = 1, prob = exp(SI_sim) / (1 + exp(SI_sim)))
Y_shift <- sample(x = Y_sim, size = N, replace = TRUE, prob = exp(beta0 * Y_sim))
X_shift <- matrix(0, nrow = N, ncol = 2)
for (i in 1:N)
{
w_i <- ((Y_shift[i] == 1) * exp(theta0 + X1_sim * theta1 + X2_sim * theta2) +
(Y_shift[i] == 0)) / (1 + exp(theta0 + X1_sim * theta1 + X2_sim * theta2))
X_shift[i, ] <- X_sim[sample(1:N_sim, size = 1, prob = w_i), ]
}
X1_shift <- X_shift[, 1]
X2_shift <- X_shift[, 2]
### average of X given Y (auxiliary information)
phi <- matrix(0, 2, p)
phi[1, ] <- colMeans(X_shift[Y_shift == 1, ])
phi[2, ] <- colMeans(X_shift[Y_shift == 0, ])
auxLS.logistic(data = data.frame(X = X, Y = Y),
X.name = c("X.X1", "X.X2"), Y.name = "Y",
aux = "EXsubgroupY",
control.EXsubgroupY = list(phi = phi,
sample.size = N))
##### Logistic regression model #####
p <- 2
theta0 <- 1
theta1 <- 1
theta2 <- 1
beta0 <- 0.2
n <- 1000
N <- 1000
N_sim <- 10000
X1 <- rnorm(n = n, mean = 0, sd = 1)
X2 <- rbinom(n = n, size = 1, prob = 0.6)
X <- cbind(X1, X2)
SI <- theta0 + X1 * theta1 + X2 * theta2
Y <- rbinom(n = n, size = 1, prob = exp(SI) / (1 + exp(SI)))
test.data <- data.frame(response = Y,
covariate = X)
X1_sim <- rnorm(n = N_sim, mean = 0, sd = 1)
X2_sim <- rbinom(n = N_sim, size = 1, prob = 0.6)
X_sim <- cbind(X1_sim, X2_sim)
SI_sim <- theta0 + X1_sim * theta1 + X2_sim * theta2
Y_sim <- rbinom(n = N_sim, size = 1, prob = exp(SI_sim) / (1 + exp(SI_sim)))
Y_shift <- sample(x = Y_sim, size = N, replace = TRUE, prob = exp(beta0 * Y_sim))
X_shift <- matrix(0, nrow = N, ncol = 2)
for (i in 1:N)
{
w_i <- ((Y_shift[i] == 1) * exp(theta0 + X1_sim * theta1 + X2_sim * theta2) +
(Y_shift[i] == 0)) / (1 + exp(theta0 + X1_sim * theta1 + X2_sim * theta2))
X_shift[i, ] <- X_sim[sample(1:N_sim, size = 1, prob = w_i), ]
}
X1_shift <- X_shift[, 1]
X2_shift <- X_shift[, 2]
### average of X given Y (auxiliary information)
phi <- matrix(0, 2, p)
phi[1, ] <- colMeans(X_shift[Y_shift == 1, ])
phi[2, ] <- colMeans(X_shift[Y_shift == 0, ])
auxLS.logistic(data = data.frame(X = X, Y = Y),
X.name = c("X.X1", "X.X2"), Y.name = "Y",
aux = "EXsubgroupY",
control.EXsubgroupY = list(phi = phi,
sample.size = N))
library(MYHRcpp)
library(MYHRcpp)
library(MYHRcpp)
##### Normal regression model #####
p <- 2
theta0 <- 1
theta1 <- 1
theta2 <- 1
sigma0 <- 0.5
beta0 <- 0.2
n <- 100
N <- 1000
N_sim <- 10000
X1 <- rnorm(n = n, mean = 0, sd = 1)
X2 <- rbinom(n = n, size = 1, prob = 0.6)
X <- cbind(X1, X2)
Y <- rnorm(n = n, mean = theta0 + X1 * theta1 + X2 * theta2, sd = sigma0)
test.data <- data.frame(response = Y,
covariate = X)
X1_sim <- rnorm(n = N_sim, mean = 0, sd = 1)
X2_sim <- rbinom(n = N_sim, size = 1, prob = 0.6)
X_sim <- cbind(X1_sim, X2_sim)
Y_sim <- rnorm(n = N_sim,
mean = theta0 + X1_sim * theta1 + X2_sim * theta2,
sd = sigma0)
Y_shift <- sample(x = Y_sim, size = N, replace = TRUE, prob = exp(beta0 * Y_sim))
X_shift <- matrix(0, nrow = N, ncol = 2)
for (i in 1:N)
{
w_i <- dnorm(Y_shift[i] - theta0 - X1_sim * theta1 - X2_sim * theta2,
mean = 0, sd = sigma0)
X_shift[i, ] <- X_sim[sample(1:N_sim, size = 1, prob = w_i), ]
}
X1_shift <- X_shift[, 1]
X2_shift <- X_shift[, 2]
### average of X given Y (auxiliary information)
y.pts <- matrix(0, 1, 2)
y.pts[1, ] <- quantile(Y_shift, c(0.0, 0.5))
phi <- matrix(0, 1, p)
phi[1, ] <- colMeans(X_shift[(Y_shift > y.pts[1, 1]) & (Y_shift <= y.pts[1, 2]), ])
auxLS.normal(X = test.data[, paste("covariate.X", 1:p, sep = "")],
Y = test.data[, "response"],
aux = "EXsubgroupY",
control.EXsubgroupY = list(phi = phi, y.pts = y.pts,
sample.size = N))
auxLS.normal(X = test.data[, paste("covariate.X", 1:p, sep = "")],
Y = test.data[, "response"],
aux = "EXsubgroupY", shift = FALSE,
control.EXsubgroupY = list(phi = phi, y.pts = y.pts,
sample.size = N))
auxLS.normal(data = test.data,
X.name = paste("covariate.X", 1:p, sep = ""),
Y.name = "response",
aux = "EXsubgroupY",
control.EXsubgroupY = list(phi = phi, y.pts = y.pts,
sample.size = N))
auxLS.normal(X = test.data[, paste("covariate.X", 1:p, sep = "")],
Y = test.data[, "response"],
aux = "EXsubgroupY", shift = FALSE,
control.EXsubgroupY = list(phi = phi, y.pts = y.pts,
sample.size = N))
y.pts <- matrix(0, 4, 2)
y.pts[1, ] <- quantile(Y_shift, c(0.00, 0.25))
y.pts[2, ] <- quantile(Y_shift, c(0.25, 0.5))
y.pts[3, ] <- quantile(Y_shift, c(0.50, 0.75))
y.pts[4, ] <- quantile(Y_shift, c(0.75, 1.00))
phi1 <- colMeans(X_shift[(Y_shift > y.pts[1, 1]) & (Y_shift <= y.pts[1, 2]), ])
phi2 <- colMeans(X_shift[(Y_shift > y.pts[2, 1]) & (Y_shift <= y.pts[2, 2]), ])
phi3 <- colMeans(X_shift[(Y_shift > y.pts[3, 1]) & (Y_shift <= y.pts[3, 2]), ])
phi4 <- colMeans(X_shift[(Y_shift > y.pts[4, 1]) & (Y_shift <= y.pts[4, 2]), ])
auxLS.normal(data = test.data,
X.name = paste("covariate.X", 1:p, sep = ""),
Y.name = "response",
aux = "EXsubgroupY",
control.EXsubgroupY = list(phi = rbind(phi1, phi2, phi3, phi4),
y.pts = y.pts,
sample.size = N))
auxLS.normal(X = test.data[, paste("covariate.X", 1:p, sep = "")],
Y = test.data[, "response"],
aux = "EXsubgroupY", shift = FALSE,
control.EXsubgroupY = list(phi = phi, y.pts = y.pts,
sample.size = N))
auxLS.normal(X = test.data[, paste("covariate.X", 1:p, sep = "")],
Y = test.data[, "response"],
aux = "EXsubgroupY", shift = FALSE,
control.EXsubgroupY = list(phi = rbind(phi1, phi2, phi3, phi4),
y.pts = y.pts,
sample.size = N))
### average of Y given X (auxiliary information)
phi1 <- mean(Y_shift[X_shift[, 1] > 0])
phi2 <- mean(Y_shift[X_shift[, 1] <= 0])
auxLS.normal(data = test.data,
X.name = paste("covariate.X", 1:p, sep = ""),
Y.name = "response",
aux = "EYsubgroupX",
control.EYsubgroupX = list(phi = c(phi1, phi2),
inclusion = cbind(X[, 1] > 0, X[, 1] <= 0),
sample.size = N))
auxLS.normal(data = test.data,
X.name = paste("covariate.X", 1:p, sep = ""),
Y.name = "response",
aux = "EYsubgroupX", shift = FALSE,
control.EYsubgroupX = list(phi = c(phi1, phi2),
inclusion = cbind(X[, 1] > 0, X[, 1] <= 0),
sample.size = N))
aux.normal(data = test.data,
X.name = paste("covariate.X", 1:p, sep = ""),
Y.name = "response",
aux = "EYsubgroupX",
control.EYsubgroupX = list(phi = c(phi1, phi2),
inclusion = cbind(X[, 1] > 0, X[, 1] <= 0),
sample.size = N))
##### Logistic regression model #####
p <- 2
theta0 <- 1
theta1 <- 1
theta2 <- 1
beta0 <- 0.2
n <- 1000
N <- 1000
N_sim <- 10000
X1 <- rnorm(n = n, mean = 0, sd = 1)
X2 <- rbinom(n = n, size = 1, prob = 0.6)
X <- cbind(X1, X2)
SI <- theta0 + X1 * theta1 + X2 * theta2
Y <- rbinom(n = n, size = 1, prob = exp(SI) / (1 + exp(SI)))
test.data <- data.frame(response = Y,
covariate = X)
X1_sim <- rnorm(n = N_sim, mean = 0, sd = 1)
X2_sim <- rbinom(n = N_sim, size = 1, prob = 0.6)
X_sim <- cbind(X1_sim, X2_sim)
SI_sim <- theta0 + X1_sim * theta1 + X2_sim * theta2
Y_sim <- rbinom(n = N_sim, size = 1, prob = exp(SI_sim) / (1 + exp(SI_sim)))
Y_shift <- sample(x = Y_sim, size = N, replace = TRUE, prob = exp(beta0 * Y_sim))
X_shift <- matrix(0, nrow = N, ncol = 2)
for (i in 1:N)
{
w_i <- ((Y_shift[i] == 1) * exp(theta0 + X1_sim * theta1 + X2_sim * theta2) +
(Y_shift[i] == 0)) / (1 + exp(theta0 + X1_sim * theta1 + X2_sim * theta2))
X_shift[i, ] <- X_sim[sample(1:N_sim, size = 1, prob = w_i), ]
}
X1_shift <- X_shift[, 1]
X2_shift <- X_shift[, 2]
### average of X given Y (auxiliary information)
phi <- matrix(0, 2, p)
phi[1, ] <- colMeans(X_shift[Y_shift == 1, ])
phi[2, ] <- colMeans(X_shift[Y_shift == 0, ])
auxLS.logistic(data = data.frame(X = X, Y = Y),
X.name = c("X.X1", "X.X2"), Y.name = "Y",
aux = "EXsubgroupY",
control.EXsubgroupY = list(phi = phi,
sample.size = N))
auxLS.logistic(data = data.frame(X = X, Y = Y),
X.name = c("X.X1", "X.X2"), Y.name = "Y",
aux = "EXsubgroupY", shift = FALSE,
control.EXsubgroupY = list(phi = phi,
sample.size = N))
### average of Y given X (auxiliary information)
phi1 <- mean(Y_shift[X_shift[, 1] > 0])
phi2 <- mean(Y_shift[X_shift[, 1] <= 0])
auxLS.logistic(data = test.data,
X.name = paste("covariate.X", 1:p, sep = ""),
Y.name = "response",
aux = "EYsubgroupX",
control.EYsubgroupX = list(phi = c(phi1, phi2),
inclusion = cbind(X[, 1] > 0, X[, 1] <= 0),
sample.size = N))
c(phi1, phi2)
library(MYHRcpp)
p <- 2
theta0 <- 1
theta1 <- 1
theta2 <- 1
beta0 <- 0.2
n <- 1000
N <- 1000
N_sim <- 10000
X1 <- rnorm(n = n, mean = 0, sd = 1)
X2 <- rbinom(n = n, size = 1, prob = 0.6)
X <- cbind(X1, X2)
SI <- theta0 + X1 * theta1 + X2 * theta2
Y <- rbinom(n = n, size = 1, prob = exp(SI) / (1 + exp(SI)))
test.data <- data.frame(response = Y,
covariate = X)
X1_sim <- rnorm(n = N_sim, mean = 0, sd = 1)
X2_sim <- rbinom(n = N_sim, size = 1, prob = 0.6)
X_sim <- cbind(X1_sim, X2_sim)
SI_sim <- theta0 + X1_sim * theta1 + X2_sim * theta2
Y_sim <- rbinom(n = N_sim, size = 1, prob = exp(SI_sim) / (1 + exp(SI_sim)))
Y_shift <- sample(x = Y_sim, size = N, replace = TRUE, prob = exp(beta0 * Y_sim))
X_shift <- matrix(0, nrow = N, ncol = 2)
for (i in 1:N)
{
w_i <- ((Y_shift[i] == 1) * exp(theta0 + X1_sim * theta1 + X2_sim * theta2) +
(Y_shift[i] == 0)) / (1 + exp(theta0 + X1_sim * theta1 + X2_sim * theta2))
X_shift[i, ] <- X_sim[sample(1:N_sim, size = 1, prob = w_i), ]
}
X1_shift <- X_shift[, 1]
X2_shift <- X_shift[, 2]
### average of X given Y (auxiliary information)
phi <- matrix(0, 2, p)
phi[1, ] <- colMeans(X_shift[Y_shift == 1, ])
phi[2, ] <- colMeans(X_shift[Y_shift == 0, ])
auxLS.logistic(data = data.frame(X = X, Y = Y),
X.name = c("X.X1", "X.X2"), Y.name = "Y",
aux = "EXsubgroupY",
control.EXsubgroupY = list(phi = phi,
sample.size = N))
auxLS.logistic(data = data.frame(X = X, Y = Y),
X.name = c("X.X1", "X.X2"), Y.name = "Y",
aux = "EXsubgroupY", shift = FALSE,
control.EXsubgroupY = list(phi = phi,
sample.size = N))
### average of Y given X (auxiliary information)
phi1 <- mean(Y_shift[X_shift[, 1] > 0])
phi2 <- mean(Y_shift[X_shift[, 1] <= 0])
auxLS.logistic(data = test.data,
X.name = paste("covariate.X", 1:p, sep = ""),
Y.name = "response",
aux = "EYsubgroupX",
control.EYsubgroupX = list(phi = c(phi1, phi2),
inclusion = cbind(X[, 1] > 0, X[, 1] <= 0),
sample.size = N))
auxLS.logistic(data = test.data,
X.name = paste("covariate.X", 1:p, sep = ""),
Y.name = "response",
aux = "EYsubgroupX", shift = FALSE,
control.EYsubgroupX = list(phi = c(phi1, phi2),
inclusion = cbind(X[, 1] > 0, X[, 1] <= 0),
sample.size = N))
library(MYHRcpp)
p <- 2
theta0 <- 1
theta1 <- 1
theta2 <- 1
beta0 <- 0.2
n <- 1000
N <- 1000
N_sim <- 10000
X1 <- rnorm(n = n, mean = 0, sd = 1)
X2 <- rbinom(n = n, size = 1, prob = 0.6)
X <- cbind(X1, X2)
SI <- theta0 + X1 * theta1 + X2 * theta2
Y <- rbinom(n = n, size = 1, prob = exp(SI) / (1 + exp(SI)))
test.data <- data.frame(response = Y,
covariate = X)
X1_sim <- rnorm(n = N_sim, mean = 0, sd = 1)
X2_sim <- rbinom(n = N_sim, size = 1, prob = 0.6)
X_sim <- cbind(X1_sim, X2_sim)
SI_sim <- theta0 + X1_sim * theta1 + X2_sim * theta2
Y_sim <- rbinom(n = N_sim, size = 1, prob = exp(SI_sim) / (1 + exp(SI_sim)))
Y_shift <- sample(x = Y_sim, size = N, replace = TRUE, prob = exp(beta0 * Y_sim))
X_shift <- matrix(0, nrow = N, ncol = 2)
for (i in 1:N)
{
w_i <- ((Y_shift[i] == 1) * exp(theta0 + X1_sim * theta1 + X2_sim * theta2) +
(Y_shift[i] == 0)) / (1 + exp(theta0 + X1_sim * theta1 + X2_sim * theta2))
X_shift[i, ] <- X_sim[sample(1:N_sim, size = 1, prob = w_i), ]
}
X1_shift <- X_shift[, 1]
X2_shift <- X_shift[, 2]
### average of X given Y (auxiliary information)
phi <- matrix(0, 2, p)
phi[1, ] <- colMeans(X_shift[Y_shift == 1, ])
phi[2, ] <- colMeans(X_shift[Y_shift == 0, ])
phi
colMeans(X[Y == 1, ])
colMeans(X[Y == 0, ])
mean(Y)
mean(Y_shift)
library(MYHRcpp)
library(MYHRcpp)
library(MYHRcpp)
data <- read.csv(\"https://storage.googleapis.com/covid19-open-data/v3/epidemiology.csv\")
)
data <- read.csv("https://storage.googleapis.com/covid19-open-data/v3/epidemiology.csv")
View(data)
View(data)
usethis::create_from_github(
"https://github.com/myh0728/EPPSA.git",
destdir = "~/Library/CloudStorage/Dropbox/R project_MYH/"
)
