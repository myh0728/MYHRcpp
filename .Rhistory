test4 <- NW_K2B_rcpp_o2(X = X, Y = Y, x = x, h = 1.5)
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = NW_R_kernel(X = X, Y = Y, x = x, K = K2_Biweight, h = 1.5),
Rcpp = NW_K2B_rcpp(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o1 = NW_K2B_rcpp_o1(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o2 = NW_K2B_rcpp_o2(X = X, Y = Y, x = x, h = 1.5)
)
)
ggplot2::autoplot(
microbenchmark::microbenchmark(
Rcpp = NW_K2B_rcpp(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o1 = NW_K2B_rcpp_o1(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o2 = NW_K2B_rcpp_o2(X = X, Y = Y, x = x, h = 1.5)
)
)
microbenchmark::microbenchmark(
Rcpp = NW_K2B_rcpp(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o1 = NW_K2B_rcpp_o1(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o2 = NW_K2B_rcpp_o2(X = X, Y = Y, x = x, h = 1.5)
)
ggplot2::autoplot(
microbenchmark::microbenchmark(
Rcpp = NW_K2B_rcpp(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o1 = NW_K2B_rcpp_o1(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o2 = NW_K2B_rcpp_o2(X = X, Y = Y, x = x, h = 1.5)
)
)
microbenchmark::microbenchmark(
Rcpp = NW_K2B_rcpp(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o1 = NW_K2B_rcpp_o1(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o2 = NW_K2B_rcpp_o2(X = X, Y = Y, x = x, h = 1.5)
)
microbenchmark::microbenchmark(
Rcpp = NW_K2B_rcpp(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o1 = NW_K2B_rcpp_o1(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o2 = NW_K2B_rcpp_o2(X = X, Y = Y, x = x, h = 1.5)
)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
test1 <- NW_R_kernel(X = X, Y = Y, x = x, K = K2_Biweight, h = 1.5)
test2 <- NW_K2B_rcpp(X = X, Y = Y, x = x, h = 1.5)
test3 <- NW_K2B_rcpp_o1(X = X, Y = Y, x = x, h = 1.5)
test4 <- NW_K2B_rcpp_o2(X = X, Y = Y, x = x, h = 1.5)
test5 <- NW_K2B_rcpp_n1(X = X, Y = Y, x = x, h = 1.5)
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
sum(abs(test1 - test5))
microbenchmark::microbenchmark(
Rcpp = NW_K2B_rcpp(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o1 = NW_K2B_rcpp_o1(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o2 = NW_K2B_rcpp_o2(X = X, Y = Y, x = x, h = 1.5),
Rcpp_n1 = NW_K2B_rcpp_n1(X = X, Y = Y, x = x, h = 1.5)
)
n <- 100
p <- 2
k <- 50
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- matrix(rnorm(k * p), nrow = k, ncol = p)
test1 <- NW_R_kernel(X = X, Y = Y, x = x, K = K2_Biweight, h = 1.5)
test2 <- NW_K2B_rcpp(X = X, Y = Y, x = x, h = rep(1.5, p))
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = NW_R_kernel(X = X, Y = Y, x = x, K = K2_Biweight, h = 1.5),
Rcpp = NW_K2B_rcpp(X = X, Y = Y, x = x, h = rep(1.5, p))
)
)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
test1 <- NW_R_kernel(X = X, Y = Y, x = x, K = K2_Biweight, h = 1.5)
test2 <- NW_K2B_rcpp(X = X, Y = Y, x = x, h = 1.5)
test3 <- NW_K2B_rcpp_o1(X = X, Y = Y, x = x, h = 1.5)
test4 <- NW_K2B_rcpp_o2(X = X, Y = Y, x = x, h = 1.5)
test5 <- NW_K2B_rcpp_n1(X = X, Y = Y, x = x, h = 1.5)
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
sum(abs(test1 - test5))
microbenchmark::microbenchmark(
Rcpp = NW_K2B_rcpp(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o1 = NW_K2B_rcpp_o1(X = X, Y = Y, x = x, h = 1.5),
Rcpp_o2 = NW_K2B_rcpp_o2(X = X, Y = Y, x = x, h = 1.5),
Rcpp_n1 = NW_K2B_rcpp_n1(X = X, Y = Y, x = x, h = 1.5)
)
cbind(Y, Y^2)
microbenchmark::microbenchmark(
Rcpp = NW_K2B_rcpp(X = X, Y = cbind(Y, Y^2), x = x, h = 1.5),
Rcpp_o1 = NW_K2B_rcpp_o1(X = X, Y = cbind(Y, Y^2), x = x, h = 1.5),
Rcpp_o2 = NW_K2B_rcpp_o2(X = X, Y = cbind(Y, Y^2), x = x, h = 1.5),
Rcpp_n1 = NW_K2B_rcpp_n1(X = X, Y = cbind(Y, Y^2), x = x, h = 1.5)
)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
w <- rexp(n)
test1 <- NW_w_R_kernel(X = X, Y = Y, x = x, K = K2_Biweight, h = 1.5, w = w)
test2 <- NW_K2B_w_rcpp(X = X, Y = Y, x = x, h = 1.5, w = w)
sum(abs(test1 - test2))
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
w <- rexp(n)
test1 <- NW_w_R_kernel(X = X, Y = Y, x = x, K = K2_Biweight, h = 1.5, w = w)
test2 <- NW_K2B_w_rcpp(X = X, Y = Y, x = x, h = 1.5, w = w)
sum(abs(test1 - test2))
test1 <- NWcv_R_kernel(X = X, Y = Y, K = K2_Biweight, h = 1.5)
test2 <- NWcv_K2B_rcpp(X = X, Y = Y, h = 1.5)
sum(abs(test1 - test2))
test1 <- NWcv_w_R_kernel(X = X, Y = Y, K = K2_Biweight, h = 1.5, w = w)
test2 <- NWcv_K2B_w_rcpp(X = X, Y = Y, h = 1.5, w = w)
sum(abs(test1 - test2))
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
w <- rexp(n)
test1 <- NW_R_kernel(X = X, Y = Y, x = x, K = K4_Biweight, h = 1.5)
test2 <- NW_K4B_rcpp(X = X, Y = Y, x = x, h = 1.5)
sum(abs(test1 - test2))
test1 <- NW_w_R_kernel(X = X, Y = Y, x = x, K = K4_Biweight, h = 1.5, w = w)
test2 <- NW_K4B_w_rcpp(X = X, Y = Y, x = x, h = 1.5, w = w)
sum(abs(test1 - test2))
test1 <- NWcv_R_kernel(X = X, Y = Y, K = K4_Biweight, h = 1.5)
test2 <- NWcv_K4B_rcpp(X = X, Y = Y, h = 1.5)
sum(abs(test1 - test2))
test1 <- NWcv_w_R_kernel(X = X, Y = Y, K = K4_Biweight, h = 1.5, w = w)
test2 <- NWcv_K4B_w_rcpp(X = X, Y = Y, h = 1.5, w = w)
sum(abs(test1 - test2))
###
test1 <- NW_R_kernel(X = X, Y = Y, x = x, K = K2_Gaussian, h = 1.5)
test2 <- NW_KG_rcpp(X = X, Y = Y, x = x, h = 1.5)
sum(abs(test1 - test2))
test1 <- NW_w_R_kernel(X = X, Y = Y, x = x, K = K2_Gaussian, h = 1.5, w = w)
test2 <- NW_KG_w_rcpp(X = X, Y = Y, x = x, h = 1.5, w = w)
sum(abs(test1 - test2))
test1 <- NWcv_R_kernel(X = X, Y = Y, K = K2_Gaussian, h = 1.5)
test2 <- NWcv_KG_rcpp(X = X, Y = Y, h = 1.5)
sum(abs(test1 - test2))
test1 <- NWcv_w_R_kernel(X = X, Y = Y, K = K2_Gaussian, h = 1.5, w = w)
test2 <- NWcv_KG_w_rcpp(X = X, Y = Y, h = 1.5, w = w)
sum(abs(test1 - test2))
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.01))
y <- as.matrix(seq(min(Y), max(Y), length = 100))
test1 <- NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5)
test2 <- NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5)
sum(abs(test1 - test2))
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.01))
y <- as.matrix(seq(min(Y), max(Y), length = 100))
test1 <- NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5)
test2 <- NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5)
test3 <- NWD_K2B_rcpp(X = X, Y = Y, x = x, y = y, h = 1.5)
sum(abs(test1 - test2))
sum(abs(test1 - test3))
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.01))
y <- as.matrix(seq(min(Y), max(Y), length = 100))
test1 <- NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5)
test2 <- NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5)
test3 <- NWD_K2B_rcpp(X = X, Y = Y, x = x, y = y, h = 1.5)
test4 <- NWD_K2B_rcpp_v1(X = X, Y = Y, x = x, y = y, h = 1.5)
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
ggplot2::autoplot(
microbenchmark::microbenchmark(
NWD.R = NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5),
NWDuni.R = NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5),
NWD.Rcpp = NWD_K2B_rcpp(X = X, Y = Y, x = x, y = y, h = 1.5),
NWD.Rcpp_v1 = NWD_K2B_rcpp_v1(X = X, Y = Y, x = x, y = y, h = 1.5)
)
)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.01))
y <- as.matrix(seq(min(Y), max(Y), length = 50))
test1 <- NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5)
test2 <- NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5)
test3 <- NWD_K2B_rcpp(X = X, Y = Y, x = x, y = y, h = 1.5)
test4 <- NWD_K2B_rcpp_v1(X = X, Y = Y, x = x, y = y, h = 1.5)
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
ggplot2::autoplot(
microbenchmark::microbenchmark(
NWD.R = NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5),
NWDuni.R = NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5),
NWD.Rcpp = NWD_K2B_rcpp(X = X, Y = Y, x = x, y = y, h = 1.5),
NWD.Rcpp_v1 = NWD_K2B_rcpp_v1(X = X, Y = Y, x = x, y = y, h = 1.5)
)
)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
y <- as.matrix(seq(min(Y), max(Y), length = 50))
test1 <- NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5)
test2 <- NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5)
test3 <- NWD_K2B_rcpp(X = X, Y = Y, x = x, y = y, h = 1.5)
test4 <- NWD_K2B_rcpp_v1(X = X, Y = Y, x = x, y = y, h = 1.5)
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
ggplot2::autoplot(
microbenchmark::microbenchmark(
NWD.R = NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5),
NWDuni.R = NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5),
NWD.Rcpp = NWD_K2B_rcpp(X = X, Y = Y, x = x, y = y, h = 1.5),
NWD.Rcpp_v1 = NWD_K2B_rcpp_v1(X = X, Y = Y, x = x, y = y, h = 1.5)
)
)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
y <- as.matrix(seq(min(Y), max(Y), length = 50))
test1 <- NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5)
test2 <- NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5)
test3 <- NWD_K2B_rcpp(X = X, Y = Y, x = x, y = y, h = 1.5)
test4 <- NWD_K2B_rcpp_v1(X = X, Y = Y, x = x, y = y, h = 1.5)
test5 <- NW_R_kernel(X = X, Y = ctingP_rcpp(Y, y), x = x, K = K2_Biweight, h = 1.5)
test6 <- NW_R_kernel(X = X, Y = ctingP_uni_rcpp(as.vector(Y), as.vector(y)),
x = x, K = K2_Biweight, h = 1.5)
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
sum(abs(test1 - test5))
sum(abs(test1 - test6))
ggplot2::autoplot(
microbenchmark::microbenchmark(
NWD.R = NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5),
NWDuni.R = NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5),
NWD.Rcpp = NWD_K2B_rcpp(X = X, Y = Y, x = x, y = y, h = 1.5),
NWD.Rcpp_v1 = NWD_K2B_rcpp_v1(X = X, Y = Y, x = x, y = y, h = 1.5),
NW.R = NW_R_kernel(X = X, Y = ctingP_rcpp(Y, y), x = x, K = K2_Biweight, h = 1.5),
NWuni.R = NW_R_kernel(X = X, Y = ctingP_uni_rcpp(as.vector(Y), as.vector(y)),
x = x, K = K2_Biweight, h = 1.5)
)
)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
y <- as.matrix(seq(min(Y), max(Y), length = 50))
test1 <- NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5)
test2 <- NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5)
test3 <- NWD_K2B_rcpp(X = X, Y = Y, x = x, y = y, h = 1.5)
test4 <- NWD_K2B_rcpp_v1(X = X, Y = Y, x = x, y = y, h = 1.5)
test5 <- NW_R_kernel(X = X, Y = ctingP_rcpp(Y, y), x = x, K = K2_Biweight, h = 1.5)
test6 <- NW_R_kernel(X = X, Y = ctingP_uni_rcpp(as.vector(Y), as.vector(y)),
x = x, K = K2_Biweight, h = 1.5)
test7 <- NW_K2B_rcpp(X = X, Y = ctingP_rcpp(Y, y), x = x, h = 1.5)
test8 <- NW_K2B_rcpp(X = X, Y = ctingP_uni_rcpp(as.vector(Y), as.vector(y)),
x = x, h = 1.5)
sum(abs(test1 - test2))
sum(abs(test1 - test3))
sum(abs(test1 - test4))
sum(abs(test1 - test5))
sum(abs(test1 - test6))
sum(abs(test1 - test7))
sum(abs(test1 - test8))
ggplot2::autoplot(
microbenchmark::microbenchmark(
NWD.R = NWD_R_kernel(X = X, Y = Y, x = x, y = y, K = K2_Biweight, h = 1.5),
NWDuni.R = NWD_uni_R_kernel(X = X, Y = as.vector(Y), x = x, y = as.vector(y),
K = K2_Biweight, h = 1.5),
NWD.Rcpp = NWD_K2B_rcpp(X = X, Y = Y, x = x, y = y, h = 1.5),
NWD.Rcpp_v1 = NWD_K2B_rcpp_v1(X = X, Y = Y, x = x, y = y, h = 1.5),
NW.R = NW_R_kernel(X = X, Y = ctingP_rcpp(Y, y), x = x, K = K2_Biweight, h = 1.5),
NWuni.R = NW_R_kernel(X = X, Y = ctingP_uni_rcpp(as.vector(Y), as.vector(y)),
x = x, K = K2_Biweight, h = 1.5),
NW.Rcpp = NW_K2B_rcpp(X = X, Y = ctingP_rcpp(Y, y), x = x, h = 1.5),
NWuni.Rcpp = NW_K2B_rcpp(X = X, Y = ctingP_uni_rcpp(as.vector(Y), as.vector(y)),
x = x, h = 1.5)
)
)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
test1 <- DRCV_K2B_R(X = X, Y.CP = Y.CP, h = 1.5)
test2 <- DRCV_K2B_rcpp(X = X, Y_CP = Y.CP, h = 1.5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = DRCV_K2B_R(X = X, Y.CP = Y.CP, h = 1.5),
Rcpp = DRCV_K2B_rcpp(X = X, Y_CP = Y.CP, h = 1.5)
)
library(MYHRcpp)
n <- 100
p <- 5
X <- matrix(rnorm(n*p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p))+rnorm(n, mean = 0, sd = 0.2))
SID1 <- SIDR(X = X, Y = Y)
SID1
SID2 <- SIDR(X = X, Y = Y, initial = SDR1$basis[, 1])
n <- 100
p <- 5
X <- matrix(rnorm(n*p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p))+rnorm(n, mean = 0, sd = 0.2))
SDR1 <- cumuSIR(X = X, Y = Y)
SDR2 <- cumuSAVE(X = X, Y = Y)
SID1 <- SIDR(X = X, Y = Y)
SID2 <- SIDR(X = X, Y = Y, initial = SDR1$basis[, 1])
SID2
SID1
warning("test")
seq(0, 1, length = 100)
x <- rnorm(100)
quantile(x, probs = seq(0, 1, length = 100))
library(MYHRcpp)
n <- 1000
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
X <- as.matrix(X)
Y <- as.matrix(Y)
number_n <- dim(X)[1]
number_p <- dim(X)[2]
dim(Y)[2] == 1
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
dim(Y.CP)
distribution.control = list(mode = "quantile", QN = 100)
q.seq <- seq(0, 1, length = distribution.control$QN)
Y.CP <- ctingP_uni_rcpp(as.vector(Y),
quantile(Y, probs = q.seq))
dim(Y.CP)
warning("Quantile mode is not allowed for multivariate responses.
Sample mode is used instead.")
?warning
warning("Quantile mode is not allowed for multivariate responses;
Sample mode is used instead.")
warning("Quantile mode is not allowed for multivariate responses;
Sample mode is used instead.")
warning("Quantile mode is not allowed for multivariate responses;
Sample mode is used instead.")
warning("Sample mode is used instead.")
warning("Quantile mode is not allowed for multivariate responses.")
warning("Sample mode is used instead.")
q.seq <- seq(0, 1, length = distribution.control$QN)
Y.CP <- ctingP_uni_rcpp(as.vector(Y),
quantile(Y, probs = q.seq))
quantile(Y, probs = q.seq)
type(quantile(Y, probs = q.seq))
mode(quantile(Y, probs = q.seq))
distribution.control = list(mode = "sample", SN = 100, seed = 123)
set.seed(distribution.control$seed)
y.sample <- sample(Y, size = distribution.control$SN)
y.sample
Y.CP <- ctingP_uni_rcpp(as.vector(Y), y.sample)
sort(y.sample)
?sample
set.seed(distribution.control$seed)
index.sample <- sample(1:number_n, size = distribution.control$SN)
index.sample <- sample(1:number_n, size = distribution.control$SN)
Y.CP <- ctingP_rcpp(Y, Y[index.sample, ])
Y[index.sample, ]
dim(Y)
library(MYHRcpp)
n <- 1000
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
### selecting bandwidth using leave-one-out cross-validation
hhat <- LOOCV(X = X, Y = Y)
hhat1 <- LOOCV(X = X, Y = Y, regression = "mean")
hhat2 <- LOOCV(X = X, Y = Y, regression = "distribution")
hhat3 <- LOOCV(X = X, Y = Y, kernel = "K4_Biweight")
hhat4 <- LOOCV(X = X, Y = Y, kernel = "K4_Biweight", regression = "distribution")
c(hhat1, hhat2, hhat3, hhat4)
LOOCV(X = X, Y = Y, regression = "distribution", distribution.control = list(mode = "quantile", QN = 100))
LOOCV(X = X, Y = Y, regression = "distribution", distribution.control = list(mode = "quantile", QN = 50))
LOOCV(X = X, Y = Y, regression = "distribution", distribution.control = list(mode = "quantile", QN = 10))
LOOCV(X = X, Y = Y, regression = "distribution", distribution.control = list(mode = "quantile", QN = 150))
LOOCV(X = X, Y = Y, regression = "distribution", distribution.control = list(mode = "sample", SN = 100, seed = 123))
LOOCV(X = X, Y = Y, regression = "distribution", distribution.control = list(mode = "sample", SN = 50, seed = 123))
LOOCV(X = X, Y = Y, regression = "distribution", distribution.control = list(mode = "sample", SN = 100, seed = 123))
LOOCV(X = X, Y = Y, regression = "distribution", distribution.control = list(mode = "sample", SN = 200, seed = 123))
n <- 2000
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
### selecting bandwidth using leave-one-out cross-validation
hhat <- LOOCV(X = X, Y = Y)
library(MYHRcpp)
n <- 2000
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
### selecting bandwidth using leave-one-out cross-validation
hhat <- LOOCV(X = X, Y = Y)
hhat1 <- LOOCV(X = X, Y = Y, regression = "mean")
library(MYHRcpp)
n <- 2000
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
LOOCV(X = X, Y = Y)
LOOCV(X = X, Y = Y, regression = "mean")
LOOCV(X = X, Y = Y, regression = "distribution")
library(MYHRcpp)
n <- 1000
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
x <- as.matrix(seq(-3, 3, 0.1))
### selecting bandwidth using leave-one-out cross-validation
LOOCV(X = X, Y = Y)
LOOCV(X = X, Y = Y, regression = "mean")
LOOCV(X = X, Y = Y, regression = "mean", kernel = "K4_Biweight")
LOOCV(X = X, Y = Y, regression = "mean", kernel = "Gaussian")
LOOCV(X = X, Y = Y, regression = "distribution")
LOOCV(X = X, Y = Y, regression = "distribution",
distribution.control = list(mode = "sample",
SN = 100,
seed = 123))
LOOCV(X = X, Y = Y, regression = "distribution",
distribution.control = list(mode = "quantile",
QN = 100))
LOOCV(X = X, Y = Y, regression = "distribution",
distribution.control = list(mode = "empirical"))
yhat <- NW(X = X, Y = Y, x = x)
dim(yhat)
yhat2 <- NW(X = X, Y = Y, x = x, regression = "mean")
yhat1 <- NW(X = X, Y = Y, x = x)
yhat2 <- NW(X = X, Y = Y, x = x, regression = "mean")
sum(abs(yhat1 - yhat2))
yhat3 <- NW(X = X, Y = Y, x = x, regression = "distribution", y = sort(Y))
dim(yhat)
dim(yhat3)
yhat3 <- NW(X = X, Y = Y, x = x, regression = "distribution",
y = sort(unique(Y)))
yhat1 <- NW(X = X, Y = Y, x = x)
yhat2 <- NW(X = X, Y = Y, x = x, regression = "mean")
yhat3 <- NW(X = X, Y = Y, x = x, regression = "mean",
kernel = "K4_Biweight")
yhat4 <- NW(X = X, Y = Y, x = x, regression = "mean",
kernel = "K4_Biweight", bandwidth = 0.5)
yhat5 <- NW(X = X, Y = Y, x = x, regression = "distribution")
yhat0 <- NW(X = X, Y = Y)
yhat7 <- NW(X = X, Y = Y, x = x, regression = "distribution",
y = sort(unique(Y)),
distribution.control = list(mode = "sample",
SN = 100,
seed = 123))
yhat8 <- NW(X = X, Y = Y, x = x, regression = "distribution",
y = sort(unique(Y)),
distribution.control = list(mode = "quantile",
SN = 50))
yhat8 <- NW(X = X, Y = Y, x = x, regression = "distribution",
y = sort(unique(Y)),
distribution.control = list(mode = "quantile",
QN = 50))
library(MYHRcpp)
library(MYHRcpp)
