dim(X1)
dim(X2)
p <- 5
n1 <- 500
n2 <- 300
alpha0 <- 0
beta0 <- c(1, 1, 0, 0, 0)
X1.space <- matrix(rnorm(n = 10000 * p, mean = 0, sd = 1), 10000, p)
Y2 <- sample(c(1, 0), size = n2, replace = TRUE, prob = c(0.8, 0.2))
test.data <- simLS.GLM.logistic(X1.space = X1.space, size1 = n1,
Y2i = Y2,
alpha0 = alpha0, beta0 = beta0,
seed = 123)
X1 <- as.matrix(test.data$sample1[paste("covariate", 1:p, sep = ".")])
Y1 <- as.vector(test.data$sample1$response)
X2 <- as.matrix(test.data$sample2[paste("covariate", 1:p, sep = ".")])
Y2 <- as.vector(test.data$sample2$response)
test1 <- dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
33.273394/1.456235
library(MYHRcpp)
p <- 5
n1 <- 200
n2 <- 300
alpha0 <- 0
beta0 <- c(1, 1, 0, 0, 0)
X1.space <- matrix(rnorm(n = 10000 * p, mean = 0, sd = 1), 10000, p)
Y2 <- sample(c(1, 0), size = n2, replace = TRUE, prob = c(0.8, 0.2))
test.data <- simLS.GLM.logistic(X1.space = X1.space, size1 = n1,
Y2i = Y2,
alpha0 = alpha0, beta0 = beta0,
seed = 123)
X1 <- as.matrix(test.data$sample1[paste("covariate", 1:p, sep = ".")])
Y1 <- as.vector(test.data$sample1$response)
X2 <- as.matrix(test.data$sample2[paste("covariate", 1:p, sep = ".")])
Y2 <- as.vector(test.data$sample2$response)
test1 <- dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
abs(test1 - test2)
microbenchmark::microbenchmark(
R = lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
library(MYHRcpp)
p <- 5
n1 <- 200
n2 <- 300
alpha0 <- 0
beta0 <- c(1, 1, 0, 0, 0)
X1.space <- matrix(rnorm(n = 10000 * p, mean = 0, sd = 1), 10000, p)
Y2 <- sample(c(1, 0), size = n2, replace = TRUE, prob = c(0.8, 0.2))
test.data <- simLS.GLM.logistic(X1.space = X1.space, size1 = n1,
Y2i = Y2,
alpha0 = alpha0, beta0 = beta0,
seed = 123)
X1 <- as.matrix(test.data$sample1[paste("covariate", 1:p, sep = ".")])
Y1 <- as.vector(test.data$sample1$response)
X2 <- as.matrix(test.data$sample2[paste("covariate", 1:p, sep = ".")])
Y2 <- as.vector(test.data$sample2$response)
test1 <- dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
abs(test1 - test2)
microbenchmark::microbenchmark(
R = lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
library(MYHRcpp)
p <- 5
n1 <- 200
n2 <- 300
alpha0 <- 0
beta0 <- c(1, 1, 0, 0, 0)
X1.space <- matrix(rnorm(n = 10000 * p, mean = 0, sd = 1), 10000, p)
Y2 <- sample(c(1, 0), size = n2, replace = TRUE, prob = c(0.8, 0.2))
test.data <- simLS.GLM.logistic(X1.space = X1.space, size1 = n1,
Y2i = Y2,
alpha0 = alpha0, beta0 = beta0,
seed = 123)
X1 <- as.matrix(test.data$sample1[paste("covariate", 1:p, sep = ".")])
Y1 <- as.vector(test.data$sample1$response)
X2 <- as.matrix(test.data$sample2[paste("covariate", 1:p, sep = ".")])
Y2 <- as.vector(test.data$sample2$response)
test1 <- dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
abs(test1 - test2)
microbenchmark::microbenchmark(
R = lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- LS.profile.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2)
test1$alpha
test1$beta
test1$details
library(MYHRcpp)
p <- 5
n1 <- 200
n2 <- 300
alpha0 <- 0
beta0 <- c(1, 1, 0, 0, 0)
X1.space <- matrix(rnorm(n = 10000 * p, mean = 0, sd = 1), 10000, p)
Y2 <- sample(c(1, 0), size = n2, replace = TRUE, prob = c(0.8, 0.2))
test.data <- simLS.GLM.logistic(X1.space = X1.space, size1 = n1,
Y2i = Y2,
alpha0 = alpha0, beta0 = beta0,
seed = 123)
X1 <- as.matrix(test.data$sample1[paste("covariate", 1:p, sep = ".")])
Y1 <- as.vector(test.data$sample1$response)
X2 <- as.matrix(test.data$sample2[paste("covariate", 1:p, sep = ".")])
Y2 <- as.vector(test.data$sample2$response)
test1 <- dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
abs(test1 - test2)
microbenchmark::microbenchmark(
R = lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- LS.profile.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2)
test2 <- LS.profile.LASSOp.normal(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2,
initial = c(test1$alpha,
test1$beta,
test1$sigma),
w.adapt = test1$beta,
lambda = 10)
test2 <- LS.profile.LASSOp.normal(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2,
initial = c(test1$alpha,
test1$beta),
w.adapt = test1$beta,
lambda = 10)
initial = c(test1$alpha,
test1$beta)
initial
w.adapt = test1$beta
lambda = 10
X1 <- as.matrix(X1)
Y1 <- as.vector(Y1)
X2 <- as.matrix(X2)
Y2 <- as.vector(Y2)
number_n1 <- length(Y1)
number_n2 <- length(Y2)
number_n <- number_n1+number_n2
number_p <- dim(X1)[2]
zero.tol = 1e-5
iter.max = 20
stop.tol = 1e-5
diff.tol = 1e-5
if (is.null(initial))
{
trans.step <- c(0, rep(zero.tol, number_p))
}else
{
trans.step <- initial
trans.step[2:(number_p + 1)] <- trans.step[2:(number_p + 1)] *
(abs(trans.step[2:(number_p + 1)]) > zero.tol) +
zero.tol * (abs(trans.step[2:(number_p + 1)]) <= zero.tol) *
sign(trans.step[2:(number_p + 1)])
}
if (is.null(w.adapt))
{
w.adapt <- rep(1, number_p)
}else
{
w.adapt <- abs(w.adapt)
}
trans.step
w.adapt
iter <- 1
trans.step.new <- trans.step
iter_p <- 1
w_p <- w.adapt[iter_p]
b_p_ini <- trans.step.new[iter_p + 1]
b_p_ini != 0
lL.run.iter_p <- function(b_p)
{
beta.iter <- trans.step[2:(number_p + 1)]
beta.iter[iter_p] <- b_p
value <- -lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2),
n1 = number_n1,
alpha = trans.step[1],
beta = beta.iter,
iter_max = iter.max, stop_tol = stop.tol) +
lambda * (w_p * abs(b_p_ini) +
0.5 * w_p / abs(b_p_ini) * (b_p ^ 2 - b_p_ini ^ 2))
return(value)
}
esti_p <- nlminb(start = b_p_ini, objective = lL.run.iter_p)
trans.step.new[iter_p + 1] <- esti_p$par * (abs(esti_p$par) > zero.tol)
trans.step.new <- trans.step
for (iter_p in 1:number_p)
{
w_p <- w.adapt[iter_p]
b_p_ini <- trans.step.new[iter_p + 1]
if (b_p_ini != 0)
{
lL.run.iter_p <- function(b_p)
{
beta.iter <- trans.step[2:(number_p + 1)]
beta.iter[iter_p] <- b_p
value <- -lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2),
n1 = number_n1,
alpha = trans.step[1],
beta = beta.iter,
iter_max = iter.max, stop_tol = stop.tol) +
lambda * (w_p * abs(b_p_ini) +
0.5 * w_p / abs(b_p_ini) * (b_p ^ 2 - b_p_ini ^ 2))
return(value)
}
esti_p <- nlminb(start = b_p_ini, objective = lL.run.iter_p)
trans.step.new[iter_p + 1] <- esti_p$par * (abs(esti_p$par) > zero.tol)
}
}
lL.run.other <- function(par.trans)
{
value <- -lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2),
n1 = number_n1,
alpha = par.trans[1],
beta = trans.step.new[2:(number_p + 1)],
iter_max = iter.max, stop_tol = stop.tol)
return(value)
}
esti_other <- nlminb(start = trans.step.new[1],
objective = lL.run.other)
trans.step.new[1] <- esti_other$par
trans.step.new
trans.step
sum(abs(trans.step.new - trans.step)) > stop.tol
for (iter in 1:iter.max)
{
trans.step.new <- trans.step
for (iter_p in 1:number_p)
{
w_p <- w.adapt[iter_p]
b_p_ini <- trans.step.new[iter_p + 1]
if (b_p_ini != 0)
{
lL.run.iter_p <- function(b_p)
{
beta.iter <- trans.step[2:(number_p + 1)]
beta.iter[iter_p] <- b_p
value <- -lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2),
n1 = number_n1,
alpha = trans.step[1],
beta = beta.iter,
iter_max = iter.max, stop_tol = stop.tol) +
lambda * (w_p * abs(b_p_ini) +
0.5 * w_p / abs(b_p_ini) * (b_p ^ 2 - b_p_ini ^ 2))
return(value)
}
esti_p <- nlminb(start = b_p_ini, objective = lL.run.iter_p)
trans.step.new[iter_p + 1] <- esti_p$par * (abs(esti_p$par) > zero.tol)
}
}
lL.run.other <- function(par.trans)
{
value <- -lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2),
n1 = number_n1,
alpha = par.trans[1],
beta = trans.step.new[2:(number_p + 1)],
iter_max = iter.max, stop_tol = stop.tol)
return(value)
}
esti_other <- nlminb(start = trans.step.new[1],
objective = lL.run.other)
trans.step.new[1] <- esti_other$par
if (sum(abs(trans.step.new - trans.step)) > stop.tol)
{
trans.step <- trans.step.new
#print(paste("iter", iter, sep = "="))
}else
break
}
thetahat <- trans.step
names(thetahat) <- c("alpha", paste("beta", 1:number_p, sep = ""))
dG1hat <- dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2),
n1 = number_n1,
alpha = thetahat[1],
beta = thetahat[2:(number_p + 1)],
iter_max = iter.max, stop_tol = stop.tol)
names(dG1hat) <- c(paste("X1.i", 1:number_n1, sep = ""),
paste("X2.i", 1:number_n2, sep = ""))
results <- list(alpha = thetahat[1],
beta = thetahat[-1],
dG1 = dG1hat)
Sigmahat <- array(0, c(number_p + 1, number_p + 1))
thetahat.trans <- thetahat
lL.run <- function(theta.trans)
{
value <- -lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2),
n1 = number_n1,
alpha = theta.trans[1],
beta = theta.trans[2:(number_p + 1)],
iter_max = iter.max, stop_tol = stop.tol)
return(value)
}
library(MYHRcpp)
p <- 5
n1 <- 200
n2 <- 300
alpha0 <- 0
beta0 <- c(1, 1, 0, 0, 0)
X1.space <- matrix(rnorm(n = 10000 * p, mean = 0, sd = 1), 10000, p)
Y2 <- sample(c(1, 0), size = n2, replace = TRUE, prob = c(0.8, 0.2))
test.data <- simLS.GLM.logistic(X1.space = X1.space, size1 = n1,
Y2i = Y2,
alpha0 = alpha0, beta0 = beta0,
seed = 123)
X1 <- as.matrix(test.data$sample1[paste("covariate", 1:p, sep = ".")])
Y1 <- as.vector(test.data$sample1$response)
X2 <- as.matrix(test.data$sample2[paste("covariate", 1:p, sep = ".")])
Y2 <- as.vector(test.data$sample2$response)
test1 <- dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
abs(test1 - test2)
microbenchmark::microbenchmark(
R = lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- LS.profile.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2)
test2 <- LS.profile.LASSOp.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2,
initial = c(test1$alpha,
test1$beta),
w.adapt = test1$beta,
lambda = 10)
test2
library(MYHRcpp)
p <- 5
n1 <- 200
n2 <- 300
alpha0 <- 0
beta0 <- c(1, 1, 0, 0, 0)
X1.space <- matrix(rnorm(n = 10000 * p, mean = 0, sd = 1), 10000, p)
Y2 <- sample(c(1, 0), size = n2, replace = TRUE, prob = c(0.8, 0.2))
test.data <- simLS.GLM.logistic(X1.space = X1.space, size1 = n1,
Y2i = Y2,
alpha0 = alpha0, beta0 = beta0,
seed = 123)
X1 <- as.matrix(test.data$sample1[paste("covariate", 1:p, sep = ".")])
Y1 <- as.vector(test.data$sample1$response)
X2 <- as.matrix(test.data$sample2[paste("covariate", 1:p, sep = ".")])
Y2 <- as.vector(test.data$sample2$response)
test1 <- dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
abs(test1 - test2)
microbenchmark::microbenchmark(
R = lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- LS.profile.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2)
test2 <- LS.profile.LASSOp.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2,
initial = c(test1$alpha,
test1$beta),
w.adapt = test1$beta,
lambda = 10)
test2
