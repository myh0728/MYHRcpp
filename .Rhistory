R = dG1.profile.normal(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = dG1_normal_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- lL.profile.normal(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter.max = 100, stop.tol = 1e-5)
test2 <- lpL_normal_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter_max = 100, stop_tol = 1e-5)
abs(test1 - test2)
(2*pi)^(-0.5)
library(MYHRcpp)
library(MYHRcpp)
library(MYHRcpp)
p <- 5
n1 <- 500
n2 <- 200
alpha0 <- 0
beta0 <- c(1, 1, 0, 0, 0)
sigma0 <- 1
X1.space <- matrix(rnorm(n = 10000 * p, mean = 0, sd = 1), 10000, p)
Y2 <- rnorm(n = n2, mean = 1, sd = 1)
test.data <- simLS.GLM.normal(X1.space = X1.space, size1 = n1,
Y2i = Y2,
alpha0 = alpha0,
beta0 = beta0,
sigma0 = sigma0,
seed = 123)
X1 <- as.matrix(test.data$sample1[paste("covariate", 1:p, sep = ".")])
Y1 <- as.vector(test.data$sample1$response)
X2 <- as.matrix(test.data$sample2[paste("covariate", 1:p, sep = ".")])
Y2 <- as.vector(test.data$sample2$response)
test1 <- dG1.profile.normal(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter.max = 100, stop.tol = 1e-5)
test2 <- dG1_normal_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter_max = 100, stop_tol = 1e-5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = dG1.profile.normal(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = dG1_normal_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- lL.profile.normal(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter.max = 100, stop.tol = 1e-5)
test2 <- lpL_normal_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter_max = 100, stop_tol = 1e-5)
abs(test1 - test2)
microbenchmark::microbenchmark(
R = lL.profile.normal(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = lpL_normal_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0, sigma = sigma0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- LS.profile.normal(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2)
test2 <- LS.profile.LASSOp.normal(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2,
initial = c(test1$alpha,
test1$beta,
test1$sigma),
w.adapt = test1$beta,
lambda = 0.1)
test3 <- LS.profile.LASSO.normal(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2,
initial = c(test1$alpha,
test1$beta,
test1$sigma),
w.adapt = test1$beta,
seq.lambda = seq(0.1, 1, 0.1))
rbind(c(test1$alpha, test1$beta, test1$sigma),
c(test2$alpha, test2$beta, test2$sigma),
c(test3$alpha, test3$beta, test3$sigma))
test4 <- LS.predict.normal(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2,
esti = test1,
X1.future = rep(0, p),
X2.future = rep(0, p))
test5 <- LSalt.profile.normal(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
initial = NULL, initial.gamma = NULL,
iter.max = 20, stop.tol = 1e-5)
test6 <- LStest.normal(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
esti = test1,
initial = NULL,
initial.gamma = NULL,
iter.max = 20, stop.tol = 1e-5)
test6
test5
X2 <- X2 + 1
test7 <- LS.profile.normal(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2)
test8 <- LStest.normal(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
esti = test7,
initial = NULL,
initial.gamma = NULL,
iter.max = 20, stop.tol = 1e-5)
test8
p <- 5
n1 <- 200
n2 <- 300
alpha0 <- 0
beta0 <- c(1, 1, 0, 0, 0)
X1.space <- matrix(rnorm(n = 10000 * p, mean = 0, sd = 1), 10000, p)
Y2 <- sample(c(1, 0), size = n2, replace = TRUE, prob = c(0.8, 0.2))
test.data <- simLS.GLM.logistic(X1.space = X1.space, size1 = n1,
Y2i = Y2,
alpha0 = alpha0, beta0 = beta0,
seed = 123)
X1 <- as.matrix(test.data$sample1[paste("covariate", 1:p, sep = ".")])
Y1 <- as.vector(test.data$sample1$response)
X2 <- as.matrix(test.data$sample2[paste("covariate", 1:p, sep = ".")])
Y2 <- as.vector(test.data$sample2$response)
test1 <- dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = dG1.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = dG1_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5)
test2 <- lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
abs(test1 - test2)
microbenchmark::microbenchmark(
R = lL.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
alpha = alpha0, beta = beta0,
iter.max = 100, stop.tol = 1e-5),
Rcpp = lpL_logistic_rcpp(X = rbind(X1, X2), Y = c(Y1, Y2), n1 = n1,
alpha = alpha0, beta = beta0,
iter_max = 100, stop_tol = 1e-5)
)
test1 <- LS.profile.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2)
test2 <- LS.profile.LASSOp.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2,
initial = c(test1$alpha,
test1$beta),
w.adapt = test1$beta,
lambda = 1)
test3 <- LS.profile.LASSO.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2,
initial = c(test1$alpha,
test1$beta),
w.adapt = test1$beta,
seq.lambda = seq(0.1, 1, 0.1))
rbind(c(test1$alpha, test1$beta),
c(test2$alpha, test2$beta),
c(test3$alpha, test3$beta))
test4 <- LS.predict.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2,
esti = test1,
X1.future = rep(0, p),
X2.future = rep(0, p))
test5 <- LSalt.profile.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
initial = NULL, initial.gamma = NULL,
iter.max = 20, stop.tol = 1e-5)
test6 <- LStest.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
esti = test1,
initial = NULL,
initial.gamma = NULL,
iter.max = 20, stop.tol = 1e-5)
X2 <- X2 + 1
test7 <- LS.profile.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2)
test8 <- LStest.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
esti = test7,
initial = NULL,
initial.gamma = NULL,
iter.max = 20, stop.tol = 1e-5)
test6
test8
p <- 5
n1 <- 200
n2 <- 300
alpha0 <- 0
beta0 <- c(1, 1, 0, 0, 0)
X1.space <- matrix(rnorm(n = 10000 * p, mean = 0, sd = 1), 10000, p)
Y2 <- sample(c(1, 0), size = n2, replace = TRUE, prob = c(0.8, 0.2))
test.data <- simLS.GLM.logistic(X1.space = X1.space, size1 = n1,
Y2i = Y2,
alpha0 = alpha0, beta0 = beta0,
seed = 123)
X1 <- as.matrix(test.data$sample1[paste("covariate", 1:p, sep = ".")])
Y1 <- as.vector(test.data$sample1$response)
X2 <- as.matrix(test.data$sample2[paste("covariate", 1:p, sep = ".")])
Y2 <- as.vector(test.data$sample2$response)
test1 <- LS.profile.logistic(X1 = X1, Y1 = Y1,
X2 = X2, Y2 = Y2)
test6 <- LStest.logistic(X1 = X1, Y1 = Y1, X2 = X2, Y2 = Y2,
esti = test1,
initial = NULL,
initial.gamma = NULL,
iter.max = 20, stop.tol = 1e-5)
test6
library(MYHRcpp)
library(MYHRcpp)
library(MYHRcpp)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
test1 <- DRCV_K2B_R(X = X, Y.CP = Y.CP, h = 1.5)
test2 <- DRCV_K2B_rcpp(X = X, Y_CP = Y.CP, h = 1.5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = DRCV_K2B_R(X = X, Y.CP = Y.CP, h = 1.5),
Rcpp = DRCV_K2B_rcpp(X = X, Y_CP = Y.CP, h = 1.5)
)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
x <- as.matrix(seq(-3, 3, 0.1))
test1 <- KDE_K2B_rcpp(X = X, x = x, h = 1.5)
test2 <- KDE_K2B_2_rcpp(X = X, x = x, h = 1.5, w = rep(1, n))
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
x <- as.matrix(seq(-3, 3, 0.1))
test1 <- KDE_K2B_rcpp(X = X, x = x, h = 1.5)
test2 <- KDE_K2B_w_rcpp(X = X, x = x, h = 1.5, w = rep(1, n))
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
no = KDE_K2B_rcpp(X = X, x = x, h = 1.5),
yes = KDE_K2B_w_rcpp(X = X, x = x, h = 1.5, w = rep(1, n))
)
)
microbenchmark::microbenchmark(
no = KDE_K2B_rcpp(X = X, x = x, h = 1.5),
yes = KDE_K2B_w_rcpp(X = X, x = x, h = 1.5, w = rep(1, n))
)
188.834/197.692
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5)
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5)
)
2104.8362/933.6719
test1
test2
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5)
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5)
sum(abs(test1 - test2))
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5)
)
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5)
)
)
test1 <- CVMNW_K2B_R(X = X, Y = Y, h = 1.5)
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y, h = 1.5)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y, h = 1.5),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y, h = 1.5)
)
)
test1 <- LOOCV(X = X, Y = Y)
test2 <- LOOCV_o1(X = X, Y = Y)
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = LOOCV_o1(X = X, Y = Y),
Rcpp = LOOCV(X = X, Y = Y)
)
)
test1$bandwidth
test2$bandwidth
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
test1 <- CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5)
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y.CP, h = 1.5),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5)
)
)
test1 <- CVMNW_K2B_R(X = X, Y = Y, h = 1.5)
test2 <- CVMNW_K2B_rcpp(X = X, Y = Y, h = 1.5)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_R(X = X, Y = Y, h = 1.5),
Rcpp = CVMNW_K2B_rcpp(X = X, Y = Y, h = 1.5)
)
)
test1 <- LOOCV(X = X, Y = Y)
test2 <- LOOCV_o1(X = X, Y = Y)
sum(abs(test1$bandwidth - test2$bandwidth))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = LOOCV_o1(X = X, Y = Y),
Rcpp = LOOCV(X = X, Y = Y)
)
)
library(MYHRcpp)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVMNW_K2B_w_R(X = X, Y = Y, h = 1.5, w = w)
test2 <- CVMNW_K2B_w_rcpp(X = X, Y = Y, h = 1.5, w = w)
sum(abs(test1 - test2))
test1
test2
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_w_R(X = X, Y = Y, h = 1.5, w = w),
Rcpp = CVMNW_K2B_w_rcpp(X = X, Y = Y, h = 1.5, w = w)
)
)
microbenchmark::microbenchmark(
R = CVMNW_K2B_w_R(X = X, Y = Y, h = 1.5, w = w),
Rcpp = CVMNW_K2B_w_rcpp(X = X, Y = Y, h = 1.5, w = w)
)
test1 <- LOOCV(X = X, Y = Y)
test2 <- LOOCV_o1(X = X, Y = Y)
sum(abs(test1$bandwidth - test2$bandwidth))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = LOOCV_o1(X = X, Y = Y),
Rcpp = LOOCV(X = X, Y = Y)
)
)
microbenchmark::microbenchmark(
R = LOOCV_o1(X = X, Y = Y),
Rcpp = LOOCV(X = X, Y = Y)
)
microbenchmark::microbenchmark(
R = LOOCV_o1(X = X, Y = Y),
Rcpp = LOOCV(X = X, Y = Y)
)
test1 <- CVMNW_K2B_w_R(X = X, Y = Y.CP, h = 1.5, w = w)
test2 <- CVMNW_K2B_w_rcpp(X = X, Y = Y.CP, h = 1.5, w = w)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVMNW_K2B_w_R(X = X, Y = Y.CP, h = 1.5, w = w),
Rcpp = CVMNW_K2B_w_rcpp(X = X, Y = Y.CP, h = 1.5, w = w)
)
)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- LOOCV(X = X, Y = Y)
test2 <- LOOCV_o1(X = X, Y = Y)
sum(abs(test1$bandwidth - test2$bandwidth))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = LOOCV_o1(X = X, Y = Y),
Rcpp = LOOCV(X = X, Y = Y)
)
)
test1 <- LOOCV(X = X, Y = Y, kernel = "K4_Biweight")
test2 <- LOOCV_o1(X = X, Y = Y, kernel = "K4_Biweight")
sum(abs(test1$bandwidth - test2$bandwidth))
test1 <- LOOCV(X = X, Y = Y, kernel = "Gaussian")
test2 <- LOOCV_o1(X = X, Y = Y, kernel = "Gaussian")
sum(abs(test1$bandwidth - test2$bandwidth))
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVDNW_K2B_R(X = X, Y = Y.CP, h = 1.5)
test2 <- CVDNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVDNW_K2B_R(X = X, Y = Y.CP, h = 1.5),
Rcpp = CVDNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5)
)
)
microbenchmark::microbenchmark(
R = CVDNW_K2B_R(X = X, Y = Y.CP, h = 1.5),
Rcpp = CVDNW_K2B_rcpp(X = X, Y = Y.CP, h = 1.5)
)
2430.7440/927.5182
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVDNW_K4B_R(X = X, Y = Y.CP, h = 1.5)
test2 <- CVDNW_K4B_rcpp(X = X, Y = Y.CP, h = 1.5)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVDNW_K4B_R(X = X, Y = Y.CP, h = 1.5),
Rcpp = CVDNW_K4B_rcpp(X = X, Y = Y.CP, h = 1.5)
)
)
library(MYHRcpp)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVDNW_K4B_R(X = X, Y = Y.CP, h = 1.5)
test2 <- CVDNW_K4B_rcpp(X = X, Y = Y.CP, h = 1.5)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVDNW_K4B_R(X = X, Y = Y.CP, h = 1.5),
Rcpp = CVDNW_K4B_rcpp(X = X, Y = Y.CP, h = 1.5)
)
)
test1 <- CVDNW_K4B_w_R(X = X, Y = Y.CP, h = 1.5, w = w)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVDNW_K4B_w_R(X = X, Y = Y.CP, h = 1.5, w = w)
library(MYHRcpp)
n <- 100
p <- 1
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
Y.CP <- ctingP_uni_rcpp(as.vector(Y), as.vector(Y))
w <- rexp(n)
test1 <- CVDNW_K4B_w_R(X = X, Y = Y.CP, h = 1.5, w = w)
test2 <- CVDNW_K4B_w_rcpp(X = X, Y = Y.CP, h = 1.5, w = w)
sum(abs(test1 - test2))
ggplot2::autoplot(
microbenchmark::microbenchmark(
R = CVDNW_K4B_R(X = X, Y = Y.CP, h = 1.5),
Rcpp = CVDNW_K4B_rcpp(X = X, Y = Y.CP, h = 1.5)
)
)
library(MYHRcpp)
n <- 500
p <- 10
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
Y <- as.matrix(sin(X %*% rep(1, p)) + rnorm(n, mean = 0, sd = 0.2))
SDR1 <- cumuSIR(X = X, Y = Y)
SDR2 <- cumuSAVE(X = X, Y = Y)
SIM1 <- SIMR(X = X, Y = Y)
SIM1
SDR1$basis[, 1]
SIM2 <- SIMR(X = X, Y = Y, initial = SDR1$basis[, 1])
SIM2
SIM2 <- SIMR(X = X, Y = Y, initial = rep(1, p))
SIM2
library(MYHRcpp)
library(MYHRcpp)
library(MYHRcpp)
